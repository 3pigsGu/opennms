<?xml version="1.0" encoding="utf-8"?>

<chapter id="configuration-files">
	<title>Configuration Files</title>

	<section id="actiond-configuration.xml">
		<title>actiond-configuration.xml</title>
		<para>
			Actions are external programs called based on events.  This file controls 
			the number of concurrent actions allowed as well as a time out for waiting 
			on a return.
		</para>
	</section>

	<section id="c3p0.properties">
		<title>c3p0.properties</title>
		<para>
			<ulink url="http://c3p0.sourceforge.net/">C3P0</ulink> is the database connection
			pooling technology used by OpenNMS.  In most cases you should never have to change
			this file.
		</para>
	</section>

	<section id="capsd-configuration.xml">
		<title>capsd-configuration.xml</title>
		<para>
			This file defines capabilities (services) to be checked for discovered nodes.
		</para>

		<section id="capsd-configuration.xml-header">
			<title>the <code>capsd-configuration</code> tag</title>
			
			<para>
				The &lt;capsd-configuration&gt; tag at the top of
				<filename>capsd-configuration.xml</filename> controls some basic behaviors
				of Capsd.  The following attributes are accepted:
			</para>

			<glosslist>
				<glossentry>
					<glossterm>rescan-frequency</glossterm>
					<glossdef>
						<para>
							How long Capsd should wait before scanning existing nodes for
							changes in available services, in milliseconds.  A value of
							<code>86400000</code> will cause Capsd to rescan nodes every
							24 hours.
						</para>
					</glossdef>
				</glossentry>
				<glossentry>
					<glossterm>initial-sleep-time</glossterm>
					<glossdef>
						<para>
							How long Capsd should wait after OpenNMS starts before doing an
							initial scan of known nodes.  A value of <code>30000</code>
							will cause Capsd to wait 30 seconds after startup before
							attempting to check known nodes for available services.
						</para>
					</glossdef>
				</glossentry>
				<glossentry>
					<glossterm>max-suspect-thread-pool-size</glossterm>
					<glossdef>
						<para>
							The maximum number of Java threads to use for scanning hosts
							upon receiving a <code>discovery/newSuspect</code> event.
						</para>
					</glossdef>
				</glossentry>
				<glossentry>
					<glossterm>max-rescan-thread-pool-size</glossterm>
					<glossdef>
						<para>
							The maximum number of Java threads to use for the regular rescan
							that occurs every <code>rescan-frequency</code> milliseconds.
						</para>
					</glossdef>
				</glossentry>
				<glossentry>
					<glossterm>abort-protocol-scans-if-no-route</glossterm>
					<glossdef>
						<para>
							Flag which determines Capsd's behavior in the event
							that a NoRouteToHost exception is generated during a protocol plugin
							scan of an interface.  If true, Capsd will abort the protocol
							scanning process for the interface.  Defaults to <code>false</code>.
						</para>
					</glossdef>
				</glossentry>
				<glossentry>
					<glossterm>delete-propagation-enabled</glossterm>
					<glossdef>
						<para>
							Determine if deleting an service propagates to deleting the interface
							if the service is the only one remaining on the interface.  Likewise
							for the only interface on a node.  Defaults to <code>true</code>.
						</para>
					</glossdef>
				</glossentry>
				<glossentry>
					<glossterm>xmlrpc</glossterm>
					<glossdef>
						<para>
							Flag which indicates if an external XMLRPC server has to be notified
							with any event process errors.  Defaults to <code>false</code>.
						</para>
					</glossdef>
				</glossentry>
			</glosslist>
		</section>
		<section id="capsd-configuration.xml-protocol-plugins">
			<title>Protocol Plugins</title>
			
			<para>
				Protocol plugin entries define the services that are available for
				Capsd to detect.  They can refer to any Java class that implements the
				OpenNMS <code>org.opennms.netmgt.capsd.Plugin</code> interface.  A
				large number of default plugins are provided as a part of OpenNMS.
			</para>
			
			<section id="capsd-configuration.xml-protocol-plugins-attributes">
			
				<para>
					The following attributes are a part of the &lt;protocol-plugin&gt; tag:
				</para>
			
				<glosslist>
					<glossentry>
						<glossterm>protocol</glossterm>
						<glossdef>
							<para>
								The name of the protocol.  This is a user-configurable value that should match
								similar service configuration entries in the <filename>poller-configuration.xml</filename>
								file.  It is recommended that it only contain alphanumeric values.  By
								convention, you can also append a dash and numbers, like so:
								"<code>HTTP-8080</code>" for common protocols listening on an alternate
								port.
							</para>
						</glossdef>
					</glossentry>
					<glossentry>
						<glossterm>class-name</glossterm>
						<glossdef>
							<para>The name of the Java class that implements the particular protocol.</para>
						</glossdef>
					</glossentry>
					<glossentry>
						<glossterm>scan</glossterm>
						<glossdef>
							<para>
								Whether or not to scan this particular protocol.  If set to "off" Capsd will
								ignore the protocol plugin.  Defaults to <code>on</code>.
							</para>
						</glossdef>
					</glossentry>
				</glosslist>
			</section>

			<section id="capsd-configuration.xml-protocol-plugins-properties">
				<title>Properties</title>
				
				<para>
					A <code>protocol-plugin</code> entry can optionally contain zero or more
					<code>property</code> entries which allow specifying configuration to be
					passed as arguments to the plugin code.
				</para>
			</section>

			<section id="capsd-configuration.xml-protocol-plugins-configuration">
				<title>Protocol Configuration</title>
				
				<para>
					A <code>protocol-plugin</code> entry can optionally contain zero or more
					<code>protocol-configuration</code> tags which specify a subset of addresses
					for which the protocol should apply.
				</para>
				
				<para>
					Each <code>protocol-configuration</code> entry can contain zero or more of
					the following ways of specifying addresses and ranges and of overriding
					other general <code>protocol-plugin</code> defaults:
				</para>
				
				<glosslist>
					<glossentry>
						<glossterm>specific</glossterm>
						<glossdef>
							<para>A single IP address.</para>
						</glossdef>
					</glossentry>
					<glossentry>
						<glossterm>range</glossterm>
						<glossdef>
							<para>A range of IP addresses.</para>
						</glossdef>
					</glossentry>
					<glossentry>
						<glossterm>property</glossterm>
						<glossdef>
							<para>
								A <code>protocol-plugin</code> key/value property which overrides
								the defaults that are part of the container <code>protocol-plugin</code>
								entry.
							</para>
						</glossdef>
					</glossentry>
					<glossentry>
						<glossterm>scan</glossterm>
						<glossdef>
							<para>
								Whether or not the addresses defined in the <code>specific</code>
								and <code>range</code> entries should be scanned.  Defaults to
								<code>on</code>.
							</para>
						</glossdef>
					</glossentry>
				</glosslist>

			</section>
			
			<example>
				<title>Example <code>capsd-configuration.xml</code></title>

				<para>
					Here is an example <filename>capsd-configuration.xml</filename> that defines
					the <code>ICMP</code> protocol plugin, with a default timeout of 2000 milliseconds,
					and 1 retry.  For the IP addresses 192.168.1.1 and 192.168.2.1 through 192.168.2.254,
					it will use a timeout of 1000 instead.  Scanning is disabled for 192.168.1.2.

					<programlisting>&lt;?xml version="1.0"?&gt;
&lt;capsd-configuration 
  rescan-frequency="86400000" 
  initial-sleep-time="30000" 
  max-suspect-thread-pool-size="6"
  max-rescan-thread-pool-size="3"&gt;

  &lt;protocol-plugin protocol="ICMP" class-name="org.opennms.netmgt.capsd.plugins.IcmpPlugin" scan="on"&gt;
    &lt;protocol-configuration&gt;
      &lt;specific&gt;192.168.1.1&lt;/specific&gt;
      &lt;range&gt;
        &lt;begin&gt;192.168.2.1&lt;/begin&gt;
        &lt;end&gt;192.168.2.254&lt;/end&gt;
      &lt;/range&gt;
      &lt;property key="timeout" value="1000" /&gt;
    &lt;/protocol-configuration&gt;
    &lt;protocol-configuration&gt;
      &lt;specific&gt;192.168.1.2&lt;/specific&gt;
      &lt;scan&gt;off&lt;/scan&gt;
    &lt;/protocol-configuration&gt;
    &lt;property key="timeout" value="2000" /&gt;
    &lt;property key="retry" value="1" /&gt;
  &lt;/protocol-plugin&gt;
&lt;/capsd-configuration&gt;</programlisting>
				</para>
			</example>
			
		</section>
	</section>

	<section id="categories.xml">
		<title>categories.xml</title>
		<para>
			This file defines categories used by RTC for determining availability
			based on a set of rules.
		</para>
	</section>

	<section id="chart-configuration.xml">
		<title>chart-configuration.xml</title>
		<para>
			Used by some chart-generation code in the web UI.
		</para>
	</section>

	<section id="collectd-configuration.xml">
		<title>collectd-configuration.xml</title>
		<para>
			Configures various portions of data collection for RRD data.
		</para>
	</section>
	
	<section id="create.sql">
		<title>create.sql, get*.sql, set*.sql</title>
		<para>
			The <filename>create.sql</filename> file is the template for creating the
			OpenNMS database.  It is used by the installer, and generally should not
			be modified.  The get*.sql and set*.sql files define a series of stored
			procedures used in parts of the OpenNMS code.
		</para>
	</section>

	<section id="database-schema.xml">
		<title>database-schema.xml</title>
		<para>
			This file is used internally by OpenNMS for the filtering system when
			formatting database queries.  It is not meant to be modified by end-users.
		</para>
	</section>

	<section id="datacollection-config.xml">		
		<title>datacollection-config.xml</title>
		<para>
			This file is used for collecting data into round-robin databases for use in
			thresholding and graphing.
		</para>
	</section>

	<section id="destinationPaths.xml">
		<title>destinationPaths.xml</title>
		<para>
			This file contains definitions for notifiation destination paths.  It
			specifies whom to notify and by what method they should be notified.
		</para>
	</section>

	<section id="dhcpd-configuration.xml">
		<title>dhcpd-configuration.xml</title>
		<para>
			Configures the built-in DHCP daemon in OpenNMS (used for DHCP capability
			scanning and polling).
		</para>
	</section>
	
	<section id="discovery-configuration.xml">
		<title>discovery-configuration.xml</title>
		<para>
		This file defines the ranges of addresses to discover, (ping sweep) as well as time-outs, 
		number of retries, and number of threads to dedicate to discovery.  This file also provides 
		initial-sleep-time and restart-sleep-time.  These values are in milliseconds and control 
		how long after OpenNMS is started, that discovery should begin it's initial pass through 
		the addresses, and how long to wait between each additional pass.
		</para>
	</section>

	<section id="eventconf.xml">
		<title>eventconf.xml</title>
		<para>
		This file defines the Universal Event Identifiers or UEIs as well as their event masks, 
		descriptions, log messages, and severity levels.
		</para>
	</section>

	<section id="eventd-configuration.xml">
		<title>eventd-configuration.xml</title>
		<para>
		This file defines operating parameters for Eventd such as time outs and number of 
		listener threads.
		</para>
	</section>

	<section id="events-archiver-configuration.xml">
		<title>events-archiver-configuration.xml</title>
		<para>
			Configuration for the event archiver daemon.
		</para>
	</section>
	
	<section id="events.archiver.properties">
		<title>events.archiver.properties</title>
		<para>
			Logging configuration for the event archiver daemon.
		</para>
	</section>
	
	<section id="groups.xml">
		<title>groups.xml</title>
		<para>
			This file holds information about user groups, used for determining group
			membership for notifications.
		</para>
	</section>

	<section id="http-datacollection-config.xml">
		<title>http-datacollection-config.xml</title>
		<para>
			This file defines configuration for collecting RRD data from HTTP and HTTPS.
		</para>
	</section>
	
	<section id="javamail-configuration.properties">
		<title>javamail-configuration.properties</title>
		<para>
			This file contains configuration for sending e-mail from OpenNMS for
			notifications, as well as the mail transport monitor.
		</para>
	</section>
	
	<section id="jcifs.properties">
		<title>jcifs.properties</title>
		<para>
			This file defines configuration for accessing Windows SMB (CIFS) shares
			from OpenNMS.
		</para>
	</section>
	
	<section id="jmx-datacollection-config.xml">
		<title>jmx-datacollection-config.xml</title>
		<para>
			This file contains configuration for datacollection using the Java Management
			eXtensions.
		</para>
	</section>
	
	<section id="ksc-performance-reports.xml">
		<title>ksc-performance-reports.xml</title>
		<para>
			This file contains configuration for KSC reports.
		</para>
	</section>
	
	<section id="linkd-configuration.xml">
		<title>linkd-configuration.xml</title>
		<para>
			Configuration for the link daemon, used to collect path/link information
			from routers for use in maps.
		</para>
	</section>
	
	<section id="log4j.properties">
		<title>log4j.properties</title>
		<para>
			This file defines logging information, including log size and rotation, as well
			as what level of logging should happen for different parts of the OpenNMS code.
		</para>
	</section>

	<section id="log4j-controller.properties">
		<title>log4j-controller.properties</title>
		<para>???</para>
	</section>

	<section id="magic-users.properties">
		<title>magic-users.properties</title>
		<para>
		This file includes special users, and takes precedence over users.xml for the users 
		that it has information about.  This is used internally to control permissions for 
		certain functions that interact with the web UI.
		</para>
	</section>

	<section id="map.disable">
		<title>map.disable</title>
		<para>
			If this file exists, maps will not be enabled in the web UI.
		</para>
	</section>

	<section id="map.properties">
		<title>map.properties</title>
		<para>
			This file configures the SVG map feature.
		</para>
	</section>

	<section id="model-importer.properties">
		<title>model-importer.properties</title>
		<para>
			Information used by the model importer.
		</para>
	</section>
	
	<section id="monitoring-locations.xml">
		<title>monitoring-locations.xml</title>
		<para>
			This file configures the monitoring locations used by the remote poller.
		</para>
	</section>
	
	<section id="notifd-configuration.xml">
		<title>notifd-configuration.xml</title>
		<para>
			Configures the notification daemon including auto-acknowledgement
			and notification queues.
		</para>
	</section>
	
	<section id="notificationCommands.xml">
		<title>notificationCommands.xml</title>
		<para>
			This file defines how to accomplish various contact methods defined
			in <filename>destinationPaths.xml</filename>.  This would include the location
			of executable and aliases for each type of contact along with  any other
			information needed to send information of the specific type.
		</para>
		<programlisting>&lt;command type="email"&gt;
	&lt;name&gt;/bin/mail&lt;/name&gt;
	&lt;lookup&gt;email&lt;/lookup&gt;
	&lt;lookup&gt;mail&lt;/lookup&gt;
	&lt;comment&gt;for sending email notifications&lt;/comment&gt;
	&lt;argument streamed="false"&gt;
		&lt;substitution&gt;-s&lt;/substitution&gt;
		&lt;switch&gt;-subject&lt;/switch&gt;
	&lt;/argument&gt;
	&lt;argument streamed="false"&gt;
		&lt;switch&gt;-email&lt;/switch&gt;
	&lt;/argument&gt;
	&lt;argument streamed="true"&gt;
		&lt;switch&gt;-tm&lt;/switch&gt;
	&lt;/argument&gt;
&lt;/command&gt;</programlisting>
	</section>
	
	<section id="notifications.xml">
		<title>notifications.xml</title>
		<para>
			This file defines which events or UEIs warrant notification and where the
			notifications should be sent and escalated to.
		</para>
		<programlisting>&lt;notification name="nodeAdded"&gt;
	&lt;uei&gt;&lt;![CDATA[http://uei.opennms.org/nodes/nodeAdded]]&gt;&lt;/uei&gt;
	&lt;rule&gt;&lt;![CDATA[IPADDR IPLIKE *.*.*.*]]&gt;&lt;/rule&gt;
	&lt;destinationPath&gt;Email-Network/Systems&lt;/destinationPath&gt;
	&lt;text-message&gt;OpenNMS has discovered a new node named %parm[nodelabel]%.    Please be advised.&lt;/text-message&gt;
	&lt;subject&gt;%parm[nodelabel]% discovered.&lt;/subject&gt;
&lt;/notification&gt;</programlisting>
	</section>

	<section id="nsclient-config.xml">
		<title>nsclient-config.xml</title>
		<para>
			Configure the NSClient poller.
		</para>
	</section>
	
	<section id="nsclient-datacollection-config.xml">
		<title>nsclient-datacollection-config.xml</title>
		<para>
			Configure data collection through NSClient.
		</para>
	</section>
	
	<section id="opennms-datasources.xml">
		<title>opennms-datasources.xml</title>
		<para>
			This file defines information for accessing the OpenNMS database.
		</para>
	</section>

	<section id="opennms-server.xml">
		<title>opennms-server.xml</title>
		<para>
			Defines information about the management server.
		</para>
	</section>
	
	<section id="opennms.properties">
		<title>opennms.properties</title>
		<para>
			Sets global properties for the OpenNMS JVM.
		</para>
	</section>
	
	<section id="otrs.properties">
		<title>otrs.properties</title>
		<para>
			Configures properties for the OTRS ticketing plugin.
		</para>
	</section>
	
	<section id="poll-outages.xml">
		<title>poll-outages.xml</title>
		<para>
			Configures scheduled outages.
		</para>
	</section>
	
	<section id="poller-config.properties">
		<title>poller-config.properties</title>
		<para>
			Configures various classes and settings used by the web UI relating to pollers.
		</para>
	</section>
	
	<section id="poller-configuration.xml">
		<title>poller-configuration.xml</title>
		<para>
		This file is used to define packages as well as set up the various pollers.  A 
		package includes several items such as address ranges, services, outage calendars, 
		and down time models.
		</para>
	</section>

	<section id="response-adhoc-graph.properties">
		<title>response-adhoc-graph.properties</title>
		<para>
			Settings related to graphing adhoc reports.
		</para>
	</section>
	
	<section id="response-graph.properties">
		<title>response-graph.properties</title>
		<para>
			Settings related to making response-time graphs.
		</para>
	</section>

	<section id="rrd-configuration.properties">
		<title>rrd-configuration.properties</title>
		<para>
			Configuration for the RRD backend, including choosing RRDtool or JRobin
			for making round-robin files and graphing.
		</para>
	</section>
		
	<section id="rtc-configuration.xml">
		<title>rtc-configuration.xml</title>
		<para>
			This file defines properties for RTC (Real Time Console) such as the rolling window 
			used to calculate percentages of down time, web UI refresh interval and how often 
			RTC sends updates to the web interface.
		</para>
	</section>

	<section id="scriptd-configuration.xml">
		<title>scriptd-configuration.xml</title>
		<para>
			Configure BSF languages used in Scriptd.
		</para>
	</section>

	<section id="service-configuration.xml">
		<title>service-configuration.xml</title>
		<para>
		This file defines opennms services to start.  This is VM specific and controls which 
		services are started in which VMs
		</para>
	</section>

	<section id="site-status-views.xml">
		<title>site-status-views.xml</title>
		<para>???</para>
	</section>

	<section id="snmp-adhoc-graph.properties">
		<title>snmp-adhoc-graph.properties</title>
		<para>
			Settings related to graphing adhoc SNMP reports.
		</para>
	</section>
		
	<section id="snmp-config.xml">
		<title>snmp-config.xml</title>
		<para>
		This file is used to define community strings for addresses or address ranges, one 
		snmp-config entry per community.
		</para>
	</section>

	<section id="snmp-graph.properties">
		<title>snmp-graph.properties</title>
		<para>
			This file is used to define RRD configurations for generating reports.
		</para>
	</section>

	<section id="statsd-configuration.xml">
		<title>statsd-configuration.xml</title>
		<para>
			Configuration for Statsd (Top N reports).
		</para>
	</section>
	
	<section id="surveillance-views.xml">
		<title>surveillance-views.xml</title>
		<para>How many freaking *-view things do we have?!?</para>
	</section>
	
	<section id="syslogd-configuration.xml">
		<title>syslogd-configuration.xml</title>
		<para>
			Configures the syslog daemon.
		</para>
	</section>
	
	<section id="threshd-configuration.xml">
		<title>threshd-configuration.xml</title>
		<para>
			Configure which thresholding packages used to trigger alerts when various
			thresholds are reached.
		</para>
	</section>
	
	<section id="thresholds.xml">
		<title>thresholds.xml</title>
		<para>
			Configure thresholding groups based on RRD data.
		</para>
	</section>
	
	<section id="tl1d-configuration.xml">
		<title>tl1d-configuration.xml</title>
		<para>
			Configure the TL1 daemon for interacting with telecom devices.
		</para>
	</section>
	
	<section id="translator-configuration.xml">
		<title>translator-configuration.xml</title>
		<para>
			Translate incoming events based on a set of criteria.
		</para>
	</section>
	
	<section id="trapd-configuration.xml">
		<title>trapd-configuration.xml</title>
		<para>
			This file defines information for the OpenNMS SNMP trap daemon.
		</para>
	</section>

	<section id="users.xml">
		<title>users.xml</title>
		<para>
			This file holds information about users and their contact information.
			This information is used for authentication in the web UI, as well as
			notifications.
		</para>
	</section>

	<section id="vacuumd-configuration.xml">
		<title>vacuumd-configuration.xml</title>
		<para>
			Configure Vacuumd, a daemon which periodically runs a series of commands
			to keep OpenNMS running well (delete old events, clean up the database,
			etc.)
		</para>
	</section>
	
	<section id="viewsdisplay.xml">
		<title>viewsdisplay.xml</title>
		<para>
		This file defines layout of categories for display in the web UI.  The actual
		categories are defined in the categories.xml file.
		</para>
	</section>

	<section id="vulnscand-configuration.xml">
		<title>vulnscand-configuration.xml</title>
		<para>
			Configure Vulnscand, the Nessus vulnerability scanning integration.
		</para>
	</section>

	<section id="xmlrpcd-configuration.xml">
		<title>xmlrpcd-configuration.xml</title>
		<para>
			Configure Xmlrpcd, used to be able to pass XML events back and forth
			between OpenNMS and external tools.
		</para>
	</section>

	<section id="xmpp-configuration.properties">
		<title>xmpp-configuration.properties</title>
		<para>
			Configure the XMPP (Jabber) notification strategy.
		</para>
	</section>
	
</chapter>
