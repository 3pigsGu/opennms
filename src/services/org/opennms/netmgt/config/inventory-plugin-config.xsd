<?xml version="1.0"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xs:targetNamespace="http://xmlns.opennms.org/xsd/config/inventory/plugin"> 
	<!-- This is a schema for a generic configuration file for an inventory plugin. 
	     You can use this elements as descripted below or interpreter them in other way for your plug-in.
	-->

	<!-- This is the root tag.
	     You can define a sequence of exchanges valid for all the sequence of item-mappings you want to define. 
		(read definition of 'exchange' and 'item-mapping'). -->

	<xs:element name="plugin-configuration">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="exchange" minOccurs="0" maxOccurs="unbounded"/>
				<xs:element ref="item-mapping" minOccurs="1" maxOccurs="unbounded"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	
	<!--
	    Element 'exchange' make you define a command exchange with the host.
	    - In the attribute 'prompt' you must define the prompt that the application must to read to be sure
  	      that no errors happened;
          - 'errorprompt' has to contain a prompt to make the application understand to be in an error situation;
	    - 'command' defines the command to launch in no-error situation.
	-->
	<xs:element name="exchange">
		<xs:complexType>
			<xs:attribute name="prompt" type="xs:string" use="optional"/>
			<xs:attribute name="errorprompt" type="xs:string" use="optional"/>
			<xs:attribute name="command" type="xs:string" use="optional"/>
		</xs:complexType>
	</xs:element>


     <!-- This element defines sequences of exchanges and/or correspondences
          The element is identified by attribute 'command'-->
	<xs:element name="item-mapping">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="exchange" minOccurs="0" maxOccurs="unbounded"/>
				<xs:element ref="correspondence" minOccurs="0" maxOccurs="unbounded"/>
			</xs:sequence>
			<xs:attribute name="command" type="xs:string" use="required"/>
		</xs:complexType>
	</xs:element>

	<!-- Element Correspondence defines how to map informations with items:
		-item-name: the name of the item to create;
		-filter-command: it's a reference to a script or a shell command;
		-timeout: the time limit for the filter-command execution;
		-item-separator: string or character to separate items
		-assettable-column: the field in witch to insert the item data.
	     Note: Clearly, you can define either assettable-column or item-separator.
	-->
	<xs:element name="correspondence">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="assettable-column" type="xs:string" minOccurs="0" maxOccurs="1"/>
			</xs:sequence>
			<xs:attribute name="item-name" type="xs:string" use="required"/>
			<xs:attribute name="filter-command" type="xs:string" use="optional"/>
			<xs:attribute name="timeout" type="xs:positiveInteger" use="optional"/>
			<xs:attribute name="item-separator" type="xs:string" use="optional"/>

		</xs:complexType>
	</xs:element>
</xs:schema>
