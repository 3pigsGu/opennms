<?xml version="1.0" encoding="iso-8859-1" standalone='no'?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 20001102//EN"
"http://www.w3.org/TR/2000/CR-SVG-20001102/DTD/svg-20001102.dtd">


<svg  onload="load(evt);" xmlns:xlink="http://www.w3.org/1999/xlink" width="100%" height="100%" xmlns="http://www.w3.org/2000/svg-20000303-stylable" enableZoomAndPanControls="false">
	<script type="text/ecmascript" xlink:href="selectionBox/mapApp.js" />
	<script type="text/ecmascript" xlink:href="selectionBox/textbox.js" />
	<script type="text/ecmascript" xlink:href="selectionBox/timer.js" />
	<script type="text/ecmascript"><![CDATA[
		 var svgNS = "http://www.w3.org/2000/svg";
		 var xlinkNS = "http://www.w3.org/1999/xlink";
		 
		 mynodesResult = new nodesResult();
		 mymapsResult = new mapsResult();		
		 myMapApp = new mapApp();
		 mycategoriesResult = new categoriesResult();
		
		 myBGImagesResult = new BGImagesResult();
		 myMapElemDimResult = new MapElemDimResult();
 		 myMEIconsResult = new MEIconsResult();		
		
		
		
		
		// *************** classes for the definition of the "getSelectionListVal" function ******
		// invoked when an element of the list is selected
		

		function categoriesResult() { }
		
		categoriesResult.prototype.getSelectionListVal = function(selBoxName,nodeNr,arrayVal) {
			clearDownInfo();
			selectedCategoryInList=arrayVal;
		}
		
		function nodesResult() { }
		
		nodesResult.prototype.getSelectionListVal = function(selBoxName,nodeNr,arrayVal) {
			//alert("nodesresult="+arrayVal+" "+nodeNr);
			clearDownInfo();
			if(nodeNr!=0){
				menuSvgDocument.getElementById("DownInfo").appendChild(nodeSortAss[arrayVal].getInfo());		
			}
			selectedMapElemInList=arrayVal;
		
		}
		
		
		
		function mapsResult() { }
		
		mapsResult.prototype.getSelectionListVal = function(selBoxName,mapNr,arrayVal) {
			clearDownInfo();
			if(mapNr!=0){
				menuSvgDocument.getElementById("DownInfo").appendChild(mapSortAss[arrayVal].getInfo());		
			}	
			selectedMapInList=arrayVal;
		}
		
		

		
		function BGImagesResult() { }
		
		BGImagesResult.prototype.getSelectionListVal = function(selBoxName,mapNr,arrayVal) {
			clearDownInfo();
			if(mapNr!=0){
				map.tryBackgroundImage(BGImagesSortAss[arrayVal]);
			}
			selectedBGImageInList=arrayVal;
		}	
		
		function MapElemDimResult() { }
		
		MapElemDimResult.prototype.getSelectionListVal = function(selBoxName,dimNr,arrayVal) {
			clearDownInfo();
			selectedMapElemDimInList=arrayVal;
		}	
		
		
		
		function MEIconsResult() { }
		
		MEIconsResult.prototype.getSelectionListVal = function(selBoxName,mapNr,arrayVal) {
		var iconPreviewNode = menuSvgDocument.getElementById("iconPreview");		
		if (iconPreviewNode)
			iconPreviewNode.parentNode.removeChild(iconPreviewNode);
			
			if(mapNr!=0){
			settingMapElemIcon=true;
			selectedMEIconInList=arrayVal;
		
			var iconPreviewGroup = menuSvgDocument.createElementNS(svgNS,"g");
			iconPreviewGroup.setAttributeNS(null,"id", "iconPreview");
			
			var iconPreviewRect = menuSvgDocument.createElementNS(svgNS,"rect");
			iconPreviewRect.setAttributeNS(null,"x", 57);
			iconPreviewRect.setAttributeNS(null,"y", 80);
			iconPreviewRect.setAttributeNS(null,"width", 35);
			iconPreviewRect.setAttributeNS(null,"height", 35);
			iconPreviewRect.setAttributeNS(null,"fill", "white");
			iconPreviewRect.setAttributeNS(null,"stroke", "grey");
			iconPreviewRect.setAttributeNS(null,"stroke-width", 1);
			
			var iconPreview = menuSvgDocument.createElementNS(svgNS,"image");
			iconPreview.setAttributeNS(null,"x", 65);
			iconPreview.setAttributeNS(null,"y", 85);
			iconPreview.setAttributeNS(null,"width", 20);
			iconPreview.setAttributeNS(null,"height", 25);
			iconPreview.setAttributeNS(application.svgnsXLink, "xlink:href",MEIconsSortAss[arrayVal] );
			iconPreviewGroup.appendChild(iconPreviewRect);
			iconPreviewGroup.appendChild(iconPreview);
			selMEIcons.selectionBoxGroup.appendChild(iconPreviewGroup);
			
			var childNode = menuSvgDocument.getElementById("DownInfoText");		
			if (childNode)
				menuSvgDocument.getElementById("DownInfo").removeChild(childNode);		
				menuSvgDocument.getElementById("DownInfo").appendChild(parseXML("<text id=\"DownInfoText\" x=\"5\" y=\"20\">" +
				"<tspan font-size=\"11\" x=\"5\" dy=\"5\">Click on the element to set</tspan>" +
				"<tspan font-size=\"11\" x=\"7\" dy=\"15\">the icon to.</tspan>" +
			"</text>",menuSvgDocument));
			}
			else{
				clearDownInfo();
				settingMapElemIcon=false;
			}
			
		
		}		
		

		// ************************************************************************
		
		// ************** LOAD AND INITIALIZE THE APPLICATION ********************
		function load(evt)
		{
		mapSvgDocument=htmldocument.embeds[0].getSVGDocument();
		menuSvgDocument=htmldocument.embeds[1].getSVGDocument();
		
		addLegend();

	 	if(isUserAdmin){
	 		instantiateRWNormalMenu();
	 	}else{
	 		instantiateROMenu();	
	 	}
	 	
	 	enableMenu();
	 	
	 	}
		
		function doLoadMapsAndNodes(){
			if(appInited){
				LoadMaps();
				LoadNodes();
			}else{
			    setTimeout('doLoadMapsAndNodes()',1000);
			}
		}		
		
		function decreaseMapElemDim(){
			switch (mapElemDimension){
				case 30:{
					 mapElemDimension=25;
					 break;
					 }
				case 25:{
					 mapElemDimension=20;
					 break;
					 }					
				case 20:{
					 mapElemDimension=15;
					 break;
					 }
				case 15:{
					 mapElemDimension=10;
					 break;
					 }
				case 10:{
					 mapElemDimension=6;
					 break;
					 }
				case 6:{
					 return false;
					 }							
			}
			return true;
		} 		
		
	]]></script>
	<script type="text/ecmascript" xlink:href="Point2D.js"/>
	<script type="text/ecmascript" xlink:href="SVGElement.js"/>
	<!-- script added for the menu-->
	<script type="text/ecmascript"  xlink:href="contextMenu.js"/>
	<script type="text/ecmascript" xlink:href="MapEventProcessor.js"/>
	<script type="text/ecmascript" xlink:href="Link.js"/>
	<script type="text/ecmascript" xlink:href="Semaphore.js"/>
	<script type="text/ecmascript" xlink:href="Label.js"/>
	<script type="text/ecmascript" xlink:href="MapElement.js"/>
	<script type="text/ecmascript" xlink:href="Map.js"/>
	<script type="text/ecmascript" xlink:href="MapElemPositioning.js"/>
	<script type="text/ecmascript" xlink:href="ApplicationMap.js"/>
	<script type="text/ecmascript" xlink:href="menu.js"/>
	<script type="text/ecmascript" xlink:href="pick_color.js"/>
	<script type="text/ecmascript" xlink:href="zoom_pan.js"/>	
	<!--scripts added for selection-lists -->
	<script type="text/ecmascript" xlink:href="selectionBox/selectionList.js"/>
	<script type="text/ecmascript" xlink:href="selectionBox/Node.js"/>
	<script type="text/ecmascript" xlink:href="selectionBox/ElemMap.js"/>
	<script type="text/ecmascript" xlink:href="selectionBox/helper_functions.js"/>
	
	<!--desc>
		
		Opennms Map Application
	</desc-->

	<!-- ******** M E N U ********* -->	
	<svg id="WorkPanel" width="200" height="250">

	
	// ********* map informations *********
	<text id="MapInfo" display="none" x="3" y="50">Map info
	</text>	
	
	<svg id="history" y="150" x="3" width="150" heigth="100">
	    <g id="prevGroup" display="none">
		<polygon id="prev" points="0,30 5,27 5,33" style="stroke:grey;fill:blue"/>
		<polygon id="prev" points="6,30 11,27 11,33" style="stroke:grey;fill:blue"/>
		<text id="prevMapName" x='13' y='33' style='font-size:10;fill:grey'></text>
		<rect  style="cursor:pointer" id="prevAction"  x="0" y="25" rx="2" ry="2" width="14" height="10" opacity="0"/>
	    </g>
	    
	    <g id="nextGroup" display="none">
		<polygon id="next" points="0,37 0,43 5,40" style="stroke:grey;fill:blue"/>
		<polygon id="next" points="6,37 6,43 11,40" style="stroke:grey;fill:blue"/>
		<text id="nextMapName" x='13' y='43' style='font-size:10;fill:grey'></text>
		<rect  style="cursor:pointer" id="nextAction"  x="0" y="35" rx="2" ry="2" width="14" height="10" opacity="0"/>
	    </g>	    
	    
	</svg>	


	<rect x="0" y="0" id="toolbar" width="100%" height="20px" fill="black" />
	<svg id="Menu" />

		
		

	<!-- ******** end   M E N U ********* -->	
    </svg>
    
    	<svg  y="200" width="200" height="200" id="TopInfo">
		<text id="TopInfoText" x="5" y="20"></text>
		<g id="nodes" />
		<g id="categories" />
		<g id="maps" />
		<g id="bgimages" />
		<g id="mapelemdim" />
		<g id="meicons" />
	</svg>
	<svg  y="300" width="200" height="100" id="DownInfo">
		<text id="DownInfoText" x="5" y="20"></text>

	</svg>	


	<svg>
		<g id="LoadingText" x="40%" y="50%" display="none">
		<rect  x="40%" y="40%" fill="white" stroke="white" width="60" height="20"  />
		<text  x="40%" y="40%">
		<tspan    dx="3" dy="13">Loading...
		</tspan>
		</text>
		</g>
	</svg>

	<svg>
		<g id="RefreshingText" x="40%" y="50%"  display="none">
		<rect  x="40%" y="40%" fill="white" stroke="white" width="75" height="20"  />
		<text  x="40%" y="40%">
		<tspan    dx="3" dy="13">Refreshing...
		</tspan>
		</text>
		</g>
	</svg>	
	
	<!-- svg for changing the background color of the map -->

	<svg   y="180" x="20">
	    <g id="pickColor" />

	</svg>

	<svg   id="legend" y="75%"  width="130" height="130"/>

	<svg id="zoom_pan" y="75%" x="110" width="100" heigth="100">
		<g id="zoom_out" onclick='zoom(0.5);' style="cursor:pointer">
		   <line x1="9" y1="10" x2="1" y2="30" style="stroke:grey;stroke-width:2;"/>
		   <circle style="fill:white;stroke:grey;stroke-width:2;" r="8" cx="9" cy="10"/>
		   <line x1="5" y1="10" x2="13" y2="10" style="stroke:grey;stroke-width:2;"/>
		</g>

		<g id="zoom_in" onclick='zoom(2)' style="cursor:pointer">
		   <line x1="30" y1="10" x2="22" y2="30" style="stroke:grey;stroke-width:2;"/>
		   <circle style="fill:white;stroke:grey;stroke-width:2;" r="8" cx="30" cy="10"/>
		   <line x1="26" y1="10" x2="34" y2="10" style="stroke:grey;stroke-width:2;"/>
		   <line x1="30" y1="6" x2="30" y2="14" style="stroke:grey;stroke-width:2;"/>
		</g>
		<polygon id="pan_up" onclick='pan(0,-1)' points="40,35 30,45 50,45" style="stroke:grey;fill:grey;cursor:pointer"/>
		<polygon id="pan_left" onclick='pan(-1,0)' points="15,60 25,50 25,70" style="stroke:grey;fill:grey;cursor:pointer"/>
		<polygon id="pan_right" onclick='pan(1,0)' points="55,50 65,60 55,70" style="stroke:grey;fill:grey;cursor:pointer"/>
		<polygon id="pan_down" onclick='pan(0,1)' points="30,75 40,85 50,75" style="stroke:grey;fill:grey;cursor:pointer"/>
		<text x='41' y='20' style='font-size:13;fill:grey;'>Reset</text>
		<rect style="cursor:pointer" onclick='reset()'  x="41" y="5" rx="2" ry="2" width="34" height="17" opacity="0"/>
	</svg>
	<svg y="450" width="200" height="100" >
		<g>
		<text id="coordinate" x="1" y="10"/>
		</g>
	</svg>

	
	
     </svg>


