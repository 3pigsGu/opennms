<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx" 
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd">


    <tx:annotation-driven />
    

  <!-- Surveillance View beans -->
  <bean id="surveillanceViewConfigDao" class="org.opennms.web.svclayer.dao.support.DefaultSurveillanceViewConfigDao" />
  <bean id="surveillanceService" class="org.opennms.web.svclayer.support.DefaultSurveillanceService" >
    <property name="nodeDao" ref="nodeDao" />
    <property name="categoryDao" ref="categoryDao" />
    <property name="surveillanceConfigDao" ref="surveillanceViewConfigDao"/>
    
  </bean>

  <!-- Site Status beans -->
  <bean id="siteStatusViewConfigDao" class="org.opennms.web.svclayer.dao.support.DefaultSiteStatusViewConfigDao" />
  <bean id="siteStatusViewService" class="org.opennms.web.svclayer.support.DefaultSiteStatusViewService" >
  	<property name="nodeDao" ref="nodeDao" />
    <property name="categoryDao" ref="categoryDao" />
    <property name="siteStatusViewConfigDao" ref="siteStatusViewConfigDao" />
  </bean>


  <!-- Suppress Outage Service beans -->
  <bean id="outageService" class="org.opennms.web.svclayer.outage.DefaultOutageService">
    <property name="dao" ref="outageDao" />
  </bean>

  <bean id="outageTable" class="org.opennms.web.svclayer.outage.OutageTable"/>

  <!-- Category Status View beans (note: categoryConfigDao is different that the DAO for the categories table -->
  <bean id="categoryConfigDao" class="org.opennms.web.svclayer.dao.support.DefaultCategoryConfigDao" />
  <bean id="viewDisplayDao" class="org.opennms.web.svclayer.dao.support.DefaultViewDisplayDao" />
  
  <!-- Demand Poll Service beans -->
  <bean id="eventProxy" class="org.opennms.netmgt.utils.TcpEventProxy">
    <!-- <constructor-arg index="1" type="String" value="127.0.0.1" />
      <constructor-arg index="2" type="int" value="5817" /> -->
  </bean>

  <bean id="pollerApi" class="org.opennms.web.services.DefaultPollerService">
    <property name="eventProxy" ref="eventProxy"></property>
  </bean>

  <bean id="demandPollService" class="org.opennms.web.svclayer.support.DefaultDemandPollService">
    <property name="demandPollDao" ref="demandPollDao" />
    <property name="monitoredServiceDao" ref="monitoredServiceDao" />
    <property name="pollerAPI" ref="pollerApi" />
  </bean>


  <!-- Daemon Status Service beans -->
  <!--
  <bean id="mbeanServer" class="org.springframework.jmx.support.MBeanServerFactoryBean">
    <property name="locateExistingServerIfPossible" value="true"/>
  </bean>

  <bean id="daemonStatusDao" class="org.opennms.netmgt.dao.jmx.JmxDaemonStatusDao">
    <property name="mbeanServer" ref="mbeanServer" />
  </bean>
  
  <bean id="daemonStatusService" class="org.opennms.web.svclayer.daemonstatus.support.DefaultDaemonStatusService">
    <property name="daemonStatusDao" ref="daemonStatusDao" />
  </bean>
  -->
  
  <!-- Category Service Status beans -->
  <bean id="categoryStatusService" class="org.opennms.web.svclayer.catstatus.support.DefaultCategoryStatusService">
    <property name="categoryConfigDao" ref="categoryConfigDao" />
    <property name="outageDao"  ref="outageDao" />
    <property name="viewDisplayDao" ref ="viewDisplayDao"/>
  </bean>

  <!-- Distributed Status Service Status beans -->
  <bean id="distributedStatusService" class="org.opennms.web.svclayer.support.DefaultDistributedStatusService">
    <property name="monitoredServiceDao" ref="monitoredServiceDao"/>
    <property name="locationMonitorDao" ref="locationMonitorDao"/>
    <property name="applicationDao" ref="applicationDao"/>
    <property name="layoutApplicationsVertically" value="${distributed.layoutApplicationsVertically}"/>
  </bean>
  
  <bean id="distributedPollerService" class="org.opennms.web.svclayer.support.DefaultDistributedPollerService">
    <property name="locationMonitorDao" ref="locationMonitorDao"/>
  </bean>
  
  <!--  Graphing beans -->
  <bean id="graphDao" class="org.opennms.netmgt.dao.support.PropertiesGraphDao">
  	<constructor-arg>
  	  <map>
  	    <entry key="performance" value="${opennms.home}/etc/snmp-graph.properties"/>
  	    <entry key="response" value="${opennms.home}/etc/response-graph.properties"/>
  	  </map>
    </constructor-arg>  	  
  	<constructor-arg>
  	  <map>
  	    <entry key="performance" value="${opennms.home}/etc/snmp-adhoc-graph.properties"/>
  	    <entry key="response" value="${opennms.home}/etc/response-adhoc-graph.properties"/>
  	  </map>
    </constructor-arg>  	  
  </bean>
  
  <bean id="collectdConfig-init" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="staticMethod"><value>org.opennms.netmgt.config.CollectdConfigFactory.init</value></property>
  </bean>

  <bean id="collectdConfig" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean" depends-on="collectdConfig-init">
    <property name="staticMethod"><value>org.opennms.netmgt.config.CollectdConfigFactory.getInstance</value></property>
  </bean>
  
  <bean id="dataCollectionConfig-init" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="staticMethod"><value>org.opennms.netmgt.config.DataCollectionConfigFactory.init</value></property>
  </bean>

  <bean id="dataCollectionConfig" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean" depends-on="dataCollectionConfig-init">
    <property name="staticMethod"><value>org.opennms.netmgt.config.DataCollectionConfigFactory.getInstance</value></property>
  </bean>
  
  <bean id="resourceDao" class="org.opennms.netmgt.dao.support.DefaultResourceDao">
    <property name="nodeDao" ref="nodeDao"/>
    <property name="locationMonitorDao" ref="locationMonitorDao"/>
    <property name="collectdConfig" ref="collectdConfig"/>
    <property name="dataCollectionConfig" ref="dataCollectionConfig"/>
  	<property name="rrdDirectory" value="${rrd.base.dir}"/>
  </bean>
  
  <!-- Admin applications bean -->
  <bean id="adminApplicationService" class="org.opennms.web.svclayer.support.DefaultAdminApplicationService">
    <property name="applicationDao" ref="applicationDao"/>
    <property name="monitoredServiceDao" ref="monitoredServiceDao"/>
  </bean>
  
  <bean id="adminCategoryService" class="org.opennms.web.svclayer.support.DefaultAdminCategoryService">
    <property name="categoryDao" ref="categoryDao"/>
    <property name="nodeDao" ref="nodeDao"/>
  </bean>
  
  <!--  Manual Provisioning -->
  <bean id="manualProvisioningDao" class="org.opennms.web.svclayer.dao.support.DefaultManualProvisioningDao">
    <property name="importFileDirectory" value="file:${opennms.home}/etc" />
  </bean>
  
  <bean id="manualProvisioningService" class="org.opennms.web.svclayer.support.DefaultManualProvisioningService">
    <property name="provisioningDao" ref="manualProvisioningDao" />
    <property name="nodeDao" ref="nodeDao" />
    <property name="categoryDao" ref="categoryDao" />
    <property name="serviceTypeDao" ref="serviceTypeDao" />
  </bean>

  <!-- Graphing -->
  <bean id="resourceService" class="org.opennms.web.svclayer.support.DefaultResourceService">
    <property name="resourceDao" ref="resourceDao"/>
    <property name="graphDao" ref="graphDao"/>
  </bean>
  
  <bean id="chooseResourceService" class="org.opennms.web.svclayer.support.DefaultChooseResourceService">
    <property name="resourceDao" ref="resourceDao"/>
  </bean>

  <bean id="rrdStrategy-init" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="staticMethod"><value>org.opennms.netmgt.rrd.RrdUtils.graphicsInitialize</value></property>
  </bean>

  <bean id="rrdStrategy" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean" depends-on="rrdStrategy-init">
    <property name="staticMethod"><value>org.opennms.netmgt.rrd.RrdUtils.getStrategy</value></property>
  </bean>
  
  <bean id="graphResultsService" class="org.opennms.web.svclayer.support.DefaultGraphResultsService">
    <property name="resourceDao" ref="resourceDao"/>
    <property name="graphDao" ref="graphDao"/>
    <property name="nodeDao" ref="nodeDao"/>
  </bean>
  
  <bean id="rrdGraphService" class="org.opennms.web.svclayer.support.DefaultRrdGraphService">
    <property name="resourceDao" ref="resourceDao"/>
    <property name="graphDao" ref="graphDao"/>
    <property name="rrdStrategy" ref="rrdStrategy"/>
  </bean>
  

  <bean id="kscReportFactory-init" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="staticMethod"><value>org.opennms.netmgt.config.KSC_PerformanceReportFactory.init</value></property>
  </bean>

  <bean id="kscReportFactory" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean" depends-on="kscReportFactory-init">
    <property name="staticMethod"><value>org.opennms.netmgt.config.KSC_PerformanceReportFactory.getInstance</value></property>
  </bean>
  
  <bean id="kscReportService" class="org.opennms.web.svclayer.support.DefaultKscReportService">
    <property name="resourceService" ref="resourceService"/>
    <property name="kscReportFactory" ref="kscReportFactory"/>
  </bean>

  <bean id="groupManager-init" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="staticMethod"><value>org.opennms.netmgt.config.GroupFactory.init</value></property>
  </bean>

  <bean id="groupManager" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean" depends-on="groupManager-init">
    <property name="staticMethod"><value>org.opennms.netmgt.config.GroupFactory.getInstance</value></property>
  </bean>
  
  <!-- Node List page -->
  <bean id="nodeListService" class="org.opennms.web.svclayer.support.DefaultNodeListService">
    <property name="nodeDao" ref="nodeDao" />
    <property name="categoryDao" ref="categoryDao" />
    <property name="siteStatusViewConfigDao" ref="siteStatusViewConfigDao" />
  </bean>
  
  
</beans>
