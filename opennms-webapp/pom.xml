<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <parent>
    <artifactId>opennms</artifactId>
    <groupId>org.opennms</groupId>
    <version>1.3.4</version>
  </parent>
  <modelVersion>4.0.0</modelVersion>
  <artifactId>opennms-webapp</artifactId>
  <packaging>war</packaging>
  <name>OpenNMS Web Application</name>
  <properties>
    <gwtVersion>1.3.3</gwtVersion>
    <moduleName>org.opennms.dashboard.Dashboard</moduleName>
    <moduleHtml>index.html</moduleHtml>
  </properties>
  <build>
    <plugins>
      <plugin>
        <artifactId>maven-clean-plugin</artifactId>
        <configuration>
          <filesets>
            <fileset><directory>.gwt-cache</directory></fileset>
            <fileset><directory>tomcat</directory></fileset>
          </filesets>
        </configuration>
     </plugin> 
     <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>dependency-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>unpack</id>
            <phase>process-resources</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
               <artifactItem>
                 <groupId>org.opennms</groupId>
                 <artifactId>opennms-webstart</artifactId>
                 <version>${project.version}</version>
                 <type>zip</type>
                 <outputDirectory>${project.build.directory}/${project.build.finalName}/webstart</outputDirectory>
               </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.opennms.maven.plugins</groupId>
        <artifactId>gwt-maven-plugin</artifactId>
        <version>1.3</version>
        <configuration>
          <moduleName>${moduleName}</moduleName>
          <homePage>${moduleHtml}</homePage>
          <gwtHome>${gwt.home}</gwtHome>
          <pathelements>
            <pathelement>src/main/webapp</pathelement>
          </pathelements>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>compile</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-war-plugin</artifactId>
        <configuration>
        <webResources>
          <resource>
            <filtering>true</filtering>
            <directory>${basedir}/src/main/web-filtered</directory>
          </resource>
          <resource>
            <directory>${project.build.directory}/${moduleName}</directory>
          </resource>
          </webResources>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>castor-maven-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>generate</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>tomcat-maven-plugin</artifactId>
        <configuration>
          <path>/${artifactId}</path>
          <port>${tomcat.port}</port>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.cargo</groupId>
        <artifactId>cargo-maven2-plugin</artifactId>
        <configuration>
          <container>
            <containerId>tomcat5x</containerId>
            <type>embedded</type>
          </container>
        </configuration>
    </plugin>
    </plugins>
  </build>
  <dependencies>
    <!--
         Sort dependencies by groupId then artifactId, but put dependencies
         with a groupId of org.opennms first.
      -->
    <dependency>
      <groupId>org.opennms</groupId>
      <artifactId>opennms-dao</artifactId>
    </dependency>
    <!-- XXX the required test JARs should be moved into a separate project -->
    <dependency>
      <groupId>org.opennms</groupId>
      <artifactId>opennms-dao</artifactId>
      <version>${project.version}</version>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms</groupId>
      <artifactId>opennms-model</artifactId>
    </dependency>
    <dependency>
      <groupId>org.opennms</groupId>
      <artifactId>opennms-reporting</artifactId>
    </dependency>
    <dependency>
      <groupId>org.opennms</groupId>
      <artifactId>opennms-rrd-api</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.opennms</groupId>
      <artifactId>opennms-rrd-jrobin</artifactId>
      <version>${project.version}</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms</groupId>
      <artifactId>opennms-rrdtool-api</artifactId>
      <version>${project.version}</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms</groupId>
      <artifactId>opennms-services</artifactId>
      <exclusions>
        <exclusion>
          <groupId>org.mortbay.jetty</groupId>
          <artifactId>jetty</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.mortbay.jetty</groupId>
          <artifactId>jetty-util</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.mortbay.jetty</groupId>
          <artifactId>servlet-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <!-- XXX the required test JARs should be moved into a separate project -->
    <dependency>
      <groupId>org.opennms</groupId>
      <artifactId>opennms-services</artifactId>
      <version>${project.version}</version>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms</groupId>
      <artifactId>opennms-test</artifactId>
    </dependency>
    <dependency>
      <groupId>org.opennms</groupId>
      <artifactId>opennms-snmp-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.opennms</groupId>
      <artifactId>opennms-util</artifactId>
    </dependency>
    <dependency>
      <groupId>alt.dev.jmta</groupId>
      <artifactId>jmta</artifactId>
    </dependency>
    <dependency>
      <groupId>batik</groupId>
      <artifactId>batik-dom</artifactId>
    </dependency>
    <dependency>
      <groupId>batik</groupId>
      <artifactId>batik-svg-dom</artifactId>
    </dependency>
    <dependency>
      <groupId>batik</groupId>
      <artifactId>batik-transcoder</artifactId>
    </dependency>
    <dependency>
      <groupId>batik</groupId>
      <artifactId>batik-xml</artifactId>
    </dependency>
    <dependency>
      <groupId>batik</groupId>
      <artifactId>batik-util</artifactId>
    </dependency>
    <dependency>
      <groupId>castor</groupId>
      <artifactId>castor</artifactId>
    </dependency>
    <dependency>
      <groupId>com.google.gwt</groupId>
      <artifactId>gwt-servlet</artifactId>
      <version>${gwtVersion}</version>
      <!--  scope>runtime</scope -->
    </dependency>
    <dependency>
      <groupId>commons-dbcp</groupId>
      <artifactId>commons-dbcp</artifactId>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
    </dependency>
    <dependency>
      <groupId>commons-lang</groupId>
      <artifactId>commons-lang</artifactId>
    </dependency>

    <!-- XXX this is a dependency for opennms-services, but if I build just
         this project, the version is incorrect and it resolves to a broken
         release candidate version (1.0.0-rc1) instead of 1.0.1, which is in
         pom.xml -->
    <dependency>
      <groupId>jfree</groupId>
      <artifactId>jfreechart</artifactId>
      <version>1.0.1</version>
    </dependency>
    <!-- XXX used by the new "webapp-ng"/"secret" stuff directly -->
    <dependency>
      <groupId>org.jrobin</groupId>
      <artifactId>jrobin</artifactId>
    </dependency>
    <dependency>
      <groupId>httpunit</groupId>
      <artifactId>httpunit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>javax.samples.jnlp</groupId>
      <artifactId>jnlp-servlet</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>jstl</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
    </dependency>
    <dependency>
      <groupId>jwebunit</groupId>
      <artifactId>jwebunit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.easymock</groupId>
      <artifactId>easymock</artifactId>
    </dependency>
    <dependency>
      <groupId>org.extremecomponents</groupId>
      <artifactId>extremecomponents</artifactId>
    </dependency>
    <dependency>
      <groupId>org.gwtwidgets</groupId>
      <artifactId>gwt-widgets</artifactId>
    </dependency>
    <dependency>
      <groupId>org.gwtwidgets</groupId>
      <artifactId>gwt-widgets-server</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-hibernate3</artifactId>
    </dependency>
    <!--
         This is a dependency of Acegi Security that we need to depend on
         because we are excluding the Spring 1.x dependency of this project
         from org.acegisecurity:acegi-security.
      -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-mock</artifactId>
    </dependency>
    <!--
         This is a dependency of Acegi Security that we need to depend on
         because we are excluding the Spring 1.x dependency of this project
         from org.acegisecurity:acegi-security.
      -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-remoting</artifactId>
    </dependency>
    <!--
         This is a dependency of Acegi Security that we need to depend on
         because we are excluding the Spring 1.x dependency of this project
         from org.acegisecurity:acegi-security.
      -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-jdbc</artifactId>
    </dependency>
    <!--
         This is a dependency of Acegi Security that we need to depend on
         because we are excluding the Spring 1.x dependency of this project
         from org.acegisecurity:acegi-security.
      -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-support</artifactId>
    </dependency>
    <dependency>
      <groupId>poi</groupId>
      <artifactId>poi</artifactId>
    </dependency>
    <dependency>
      <groupId>postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <scope>runtime</scope>
    </dependency>
<!--
    <dependency>
      <groupId>postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <scope>test</scope>
    </dependency>
-->
    <dependency>
      <groupId>struts</groupId>
      <artifactId>struts</artifactId>
    </dependency>
    <dependency>
      <groupId>taglibs</groupId>
      <artifactId>standard</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>xerces</groupId>
      <artifactId>xercesImpl</artifactId>
    </dependency>
    <dependency>
      <groupId>org.acegisecurity</groupId>
      <artifactId>acegi-security</artifactId>
    </dependency>
  </dependencies>
</project>
