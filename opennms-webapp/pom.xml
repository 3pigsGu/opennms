<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <parent>
    <artifactId>opennms</artifactId>
    <groupId>org.opennms</groupId>
    <version>1.6.11</version>
  </parent>
  <modelVersion>4.0.0</modelVersion>
  <artifactId>opennms-webapp</artifactId>
  <packaging>war</packaging>
  <name>OpenNMS Web Application</name>
  <properties>
    <gwtVersion>1.4.60</gwtVersion>
    <moduleName>org.opennms.dashboard.Dashboard</moduleName>
    <moduleHtml>index.html</moduleHtml>
    <web.port>8080</web.port>
  </properties>
  <build>
    <plugins>
      <plugin>
        <artifactId>maven-clean-plugin</artifactId>
        <configuration>
          <filesets>
            <fileset>
              <directory>.gwt-cache</directory>
            </fileset>
            <fileset>
              <directory>tomcat</directory>
            </fileset>
          </filesets>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.opennms.maven.plugins</groupId>
        <artifactId>gwt-maven-plugin</artifactId>
        <version>1.6</version>
        <configuration>
          <moduleName>${moduleName}</moduleName>
          <homePage>${moduleHtml}</homePage>
          <gwtHome>${gwt.home}</gwtHome>
          <pathelements>
            <pathelement>src/main/webapp</pathelement>
          </pathelements>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>compile</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-war-plugin</artifactId>
        <configuration>
          <archiveClasses>true</archiveClasses>
          <webResources>
            <resource>
              <filtering>true</filtering>
              <directory>${basedir}/src/main/web-filtered</directory>
            </resource>
            <resource>
              <directory>${project.build.directory}/${moduleName}</directory>
            </resource>
          </webResources>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>castor-maven-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>generate</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- plugin to use to run webapp in an embedded tomcat -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>tomcat-maven-plugin</artifactId>
        <configuration>
          <path>/${pom.artifactId}</path>
          <port>${web.port}</port>
        </configuration>
      </plugin>
      <!-- plugin to use to run webapp in an embedded jetty -->
      <plugin>
        <groupId>org.mortbay.jetty</groupId>
        <artifactId>maven-jetty-plugin</artifactId>
	<configuration>
          <scanIntervalSeconds>10</scanIntervalSeconds>
          <connectors>
            <connector implementation="org.mortbay.jetty.nio.SelectChannelConnector">
              <port>${web.port}</port>
              <maxIdleTime>60000</maxIdleTime>
            </connector>
          </connectors>
<!--
          <systemProperties>
            <systemProperty>
              <name>opennms.home</name>
              <value>${opennms.home}</value>
            </systemProperty>
            <systemProperty>
              <name>rrd.base.dir</name>
              <value>${opennms.home}/share/rrd</value>
            </systemProperty>
            <systemProperty>
              <name>rrd.binary</name>
              <value>rrdtool</value>
            </systemProperty>
          </systemProperties>
-->
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.mortbay.jetty</groupId>
        <artifactId>maven-jetty-jspc-plugin</artifactId>
        <executions>
          <execution>
            <id>jspc</id>
            <goals>
              <goal>jspc</goal>
            </goals>
            <configuration>
              <generatedClasses>${basedir}/target/jsp-classes</generatedClasses>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-eclipse-plugin</artifactId>
        <configuration>
          <additionalBuildcommands>
            <buildcommand>org.springframework.ide.eclipse.core.springbuilder</buildcommand>
          </additionalBuildcommands>
          <additionalProjectnatures>
            <projectnature>org.springframework.ide.eclipse.core.springnature</projectnature>
          </additionalProjectnatures>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <configuration>
          <descriptors>
            <descriptor>src/assembly/xsds.xml</descriptor>
          </descriptors>
        </configuration>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  <dependencies>
    <!-- Sort dependencies by groupId then artifactId, but put dependencies with a groupId of org.opennms first. -->
    <dependency>
      <groupId>org.opennms</groupId>
      <artifactId>opennms-acegi</artifactId>
    </dependency>
    <dependency>
      <groupId>org.opennms</groupId>
      <artifactId>opennms-dao</artifactId>
    </dependency>
    <!-- XXX the required test JARs should be moved into a separate project -->
    <dependency>
      <groupId>org.opennms</groupId>
      <artifactId>opennms-dao</artifactId>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms</groupId>
      <artifactId>opennms-hibernate</artifactId>
    </dependency>
    <dependency>
      <groupId>org.opennms</groupId>
      <artifactId>opennms-model</artifactId>
    </dependency>
    <dependency>
      <groupId>org.opennms</groupId>
      <artifactId>opennms-reporting</artifactId>
    </dependency>
    <dependency>
      <groupId>org.opennms</groupId>
      <artifactId>opennms-rrd-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.opennms</groupId>
      <artifactId>opennms-rrd-jrobin</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms</groupId>
      <artifactId>opennms-rrdtool-api</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms</groupId>
      <artifactId>opennms-services</artifactId>
      <exclusions>
        <exclusion>
          <groupId>org.mortbay.jetty</groupId>
          <artifactId>jetty</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.mortbay.jetty</groupId>
          <artifactId>jetty-util</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.mortbay.jetty</groupId>
          <artifactId>servlet-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.opennms</groupId>
      <artifactId>opennms-spring</artifactId>
    </dependency>
    <dependency>
      <groupId>org.opennms.features</groupId>
      <artifactId>org.opennms.features.remote-poller-onejar</artifactId>
      <classifier>signed-jar-with-dependencies</classifier>
      <version>${pom.version}</version>
      <scope>provided</scope>
    </dependency>
    <!-- XXX the required test JARs should be moved into a separate project -->
    <dependency>
      <groupId>org.opennms</groupId>
      <artifactId>opennms-services</artifactId>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms</groupId>
      <artifactId>opennms-test</artifactId>
    </dependency>
    <dependency>
      <groupId>org.opennms</groupId>
      <artifactId>opennms-snmp-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.opennms</groupId>
      <artifactId>opennms-util</artifactId>
    </dependency>
    <dependency>
      <groupId>alt.dev.jmta</groupId>
      <artifactId>jmta</artifactId>
    </dependency>
    <dependency>
      <groupId>batik</groupId>
      <artifactId>batik-dom</artifactId>
    </dependency>
    <dependency>
      <groupId>batik</groupId>
      <artifactId>batik-svg-dom</artifactId>
    </dependency>
    <dependency>
      <groupId>batik</groupId>
      <artifactId>batik-transcoder</artifactId>
    </dependency>
    <dependency>
      <groupId>batik</groupId>
      <artifactId>batik-xml</artifactId>
    </dependency>
    <dependency>
      <groupId>batik</groupId>
      <artifactId>batik-util</artifactId>
    </dependency>
    <dependency>
      <groupId>org.codehaus.castor</groupId>
      <artifactId>castor</artifactId>
    </dependency>
    <dependency>
      <groupId>com.google.gwt</groupId>
      <artifactId>gwt-servlet</artifactId>
      <version>${gwtVersion}</version>
    </dependency>
    <dependency>
      <groupId>commons-dbcp</groupId>
      <artifactId>commons-dbcp</artifactId>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
    </dependency>
    <dependency>
      <groupId>commons-lang</groupId>
      <artifactId>commons-lang</artifactId>
    </dependency>
    <!-- XXX used by the new "webapp-ng"/"secret" stuff directly -->
    <dependency>
      <groupId>org.jrobin</groupId>
      <artifactId>jrobin</artifactId>
    </dependency>
    <dependency>
      <groupId>httpunit</groupId>
      <artifactId>httpunit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>jakarta-regexp</groupId>
      <artifactId>jakarta-regexp</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>javax.samples.jnlp</groupId>
      <artifactId>jnlp-servlet</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>jstl</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
    </dependency>
    <dependency>
      <groupId>jwebunit</groupId>
      <artifactId>jwebunit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>net.sf.opencsv</groupId>
      <artifactId>opencsv</artifactId>
    </dependency>
    <dependency>
      <groupId>net.sf.json-lib</groupId>
      <artifactId>json-lib</artifactId>
      <classifier>jdk15</classifier>
    </dependency>
    <dependency>
      <groupId>org.easymock</groupId>
      <artifactId>easymock</artifactId>
    </dependency>
    <dependency>
      <groupId>org.extremecomponents</groupId>
      <artifactId>extremecomponents</artifactId>
    </dependency>
    <dependency>
      <groupId>org.gwtwidgets</groupId>
      <artifactId>gwt-widgets</artifactId>
    </dependency>
    <dependency>
      <groupId>org.gwtwidgets</groupId>
      <artifactId>gwt-widgets-server</artifactId>
    </dependency>
    <dependency>
      <groupId>poi</groupId>
      <artifactId>poi</artifactId>
    </dependency>
    <dependency>
      <groupId>postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>rome</groupId>
      <artifactId>rome</artifactId>
    </dependency>
    <dependency>
      <groupId>struts</groupId>
      <artifactId>struts</artifactId>
    </dependency>
    <dependency>
      <groupId>taglibs</groupId>
      <artifactId>standard</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>xerces</groupId>
      <artifactId>xercesImpl</artifactId>
    </dependency>
    <dependency>
      <groupId>com.google.collections</groupId>
      <artifactId>google-collections</artifactId>
    </dependency>
  </dependencies>
</project>
