<?xml version="1.0" encoding="UTF-8" standalone="no"?><jdbc-datacollection-config xmlns="http://xmlns.opennms.org/xsd/config/jdbc-datacollection" rrdRepository="${install.share.dir}/rrd/snmp/">
    <jdbc-collection name="default">
        <rrd step="300">
		  <rra>RRA:AVERAGE:0.5:1:2016</rra>
		  <rra>RRA:AVERAGE:0.5:12:1488</rra>
		  <rra>RRA:AVERAGE:0.5:288:366</rra>
		  <rra>RRA:MAX:0.5:288:366</rra>
		  <rra>RRA:MIN:0.5:288:366</rra>
        </rrd>
      <queries>
        <query ifType="ignore" name="opennmsQuery">
          <statement data-source="opennms">
            <queryString>SELECT COUNT(eventid) as EventCount
FROM events
WHERE eventtime
BETWEEN (CURRENT_TIMESTAMP - INTERVAL '1 day')
AND CURRENT_TIMESTAMP;</queryString>
          </statement>
          <columns>
            <column alias="OnmsEventCount" data-source-name="EventCount" name="eventCount" type="GAUGE"/>
          </columns>
        </query>
        <query ifType="ignore" name="opennmsNodeQuery">
          <statement data-source="opennms">
            <queryString>SELECT COUNT(*) as NodeCount FROM node WHERE nodetype != 'D';</queryString>
          </statement>
          <columns>
            <column alias="OnmsNodeCount" data-source-name="NodeCount" name="nodeCount" type="GAUGE"/>
          </columns>
        </query>
      </queries>
    </jdbc-collection>

    <jdbc-collection name="MySQL-Global-Stats-51">
	<rrd step="300">
	    <rra>RRA:AVERAGE:0.5:1:2016</rra>
	    <rra>RRA:AVERAGE:0.5:12:1488</rra>
	    <rra>RRA:AVERAGE:0.5:288:366</rra>
	    <rra>RRA:MAX:0.5:288:366</rra>
	    <rra>RRA:MIN:0.5:288:366</rra>
	</rrd>
	<queries>
	    <query ifType="ignore" name="Q_MyUptime">
		<statement>
		    <queryString>SELECT VARIABLE_VALUE AS Uptime FROM GLOBAL_STATUS WHERE VARIABLE_NAME = 'UPTIME'</queryString>
		</statement>
		<columns>
		    <column alias="MyUptime" data-source-name="Uptime" name="Uptime" type="GAUGE"/>
		</columns>
            </query>
	    <query ifType="ignore" name="Q_MyBytesReceived">
		<statement>
		    <queryString>SELECT VARIABLE_VALUE AS Bytes_received FROM GLOBAL_STATUS WHERE VARIABLE_NAME = 'BYTES_RECEIVED'</queryString>
		</statement>
		<columns>
		    <column alias="MyBytesReceived" data-source-name="Bytes_received" name="Bytes_received" type="COUNTER"/>
		</columns>
            </query>
	    <query ifType="ignore" name="Q_MyBytesSent">
		<statement>
		    <queryString>SELECT VARIABLE_VALUE AS Bytes_sent FROM GLOBAL_STATUS WHERE VARIABLE_NAME = 'BYTES_SENT'</queryString>
		</statement>
		<columns>
		    <column alias="MyBytesSent" data-source-name="Bytes_sent" name="Bytes_sent" type="COUNTER"/>
		</columns>
	    </query>
	    <query ifType="ignore" name="Q_Com_delete">
		<statement>
		    <queryString>SELECT VARIABLE_VALUE AS Com_delete FROM GLOBAL_STATUS WHERE VARIABLE_NAME = 'COM_DELETE'</queryString>
		</statement>
		<columns>
		    <column alias="MyComDelete" data-source-name="Com_delete" name="Com_delete" type="COUNTER"/>
		</columns>
	    </query>
	    <query ifType="ignore" name="Q_Com_delete_multi">
		<statement>
		    <queryString>SELECT VARIABLE_VALUE AS Com_delete_multi FROM GLOBAL_STATUS WHERE VARIABLE_NAME = 'COM_DELETE_MULTI'</queryString>
		</statement>
		<columns>
		    <column alias="MyComDeleteMulti" data-source-name="Com_delete_multi" name="Com_delete_multi" type="COUNTER"/>
		</columns>
	    </query>
	    <query ifType="ignore" name="Q_Com_insert">
		<statement>
		    <queryString>SELECT VARIABLE_VALUE AS Com_insert FROM GLOBAL_STATUS WHERE VARIABLE_NAME = 'COM_INSERT'</queryString>
		</statement>
		<columns>
		    <column alias="MyComInsert" data-source-name="Com_insert" name="Com_insert" type="COUNTER"/>
		</columns>
	    </query>
	    <query ifType="ignore" name="Q_Com_insert_select">
		<statement>
		    <queryString>SELECT VARIABLE_VALUE AS Com_insert_select FROM GLOBAL_STATUS WHERE VARIABLE_NAME = 'COM_INSERT_SELECT'</queryString>
		</statement>
		<columns>
		    <column alias="MyComInsertSelect" data-source-name="Com_insert_select" name="Com_insert_select" type="COUNTER"/>
		</columns>
	    </query>
	    <query ifType="ignore" name="Q_Com_select">
		<statement>
		    <queryString>SELECT VARIABLE_VALUE AS Com_select FROM GLOBAL_STATUS WHERE VARIABLE_NAME = 'COM_SELECT'</queryString>
		</statement>
		<columns>
		    <column alias="MyComSelect" data-source-name="Com_select" name="Com_select" type="COUNTER"/>
		</columns>
	    </query>
	    <query ifType="ignore" name="Q_Com_stmt_execute">
		<statement>
		    <queryString>SELECT VARIABLE_VALUE AS Com_stmt_execute FROM GLOBAL_STATUS WHERE VARIABLE_NAME = 'COM_STMT_EXECUTE'</queryString>
		</statement>
		<columns>
		    <column alias="MyComStmtExecute" data-source-name="Com_stmt_execute" name="Com_stmt_execute" type="COUNTER"/>
		</columns>
	    </query>
	    <query ifType="ignore" name="Q_Com_update">
		<statement>
		    <queryString>SELECT VARIABLE_VALUE AS Com_update FROM GLOBAL_STATUS WHERE VARIABLE_NAME = 'COM_UPDATE'</queryString>
		</statement>
		<columns>
		    <column alias="MyComUpdate" data-source-name="Com_update" name="Com_update" type="COUNTER"/>
		</columns>
	    </query>
	    <query ifType="ignore" name="Q_Com_update_multi">
		<statement>
		    <queryString>SELECT VARIABLE_VALUE AS Com_update_multi FROM GLOBAL_STATUS WHERE VARIABLE_NAME = 'COM_UPDATE_MULTI'</queryString>
		</statement>
		<columns>
		    <column alias="MyComUpdateMulti" data-source-name="Com_update_multi" name="Com_update_multi" type="COUNTER"/>
		</columns>
	    </query>
	    <query ifType="ignore" name="Q_Created_tmp_disk_tables">
		<statement>
		    <queryString>SELECT VARIABLE_VALUE AS Created_tmp_disk_tables FROM GLOBAL_STATUS WHERE VARIABLE_NAME = 'CREATED_TMP_DISK_TABLES'</queryString>
		</statement>
		<columns>
		    <column alias="MyCreatTmpDiskTbl" data-source-name="Created_tmp_disk_tables" name="Created_tmp_disk_tables" type="COUNTER"/>
		</columns>
	    </query>
	    <query ifType="ignore" name="Q_Created_tmp_tables">
		<statement>
		    <queryString>SELECT VARIABLE_VALUE AS Created_tmp_tables FROM GLOBAL_STATUS WHERE VARIABLE_NAME = 'CREATED_TMP_TABLES'</queryString>
		</statement>
		<columns>
		    <column alias="MyCreatTmpTables" data-source-name="Created_tmp_tables" name="Created_tmp_tables" type="COUNTER"/>
		</columns>
	    </query>
	    <query ifType="ignore" name="Q_key_buffer_size">
		<statement>
		    <queryString>SELECT VARIABLE_VALUE AS key_buffer_size FROM GLOBAL_VARIABLES WHERE VARIABLE_NAME ='KEY_BUFFER_SIZE'</queryString>
		</statement>
		<columns>
		    <column alias="MyKeyBufferSize" data-source-name="key_buffer_size" name="key_buffer_size" type="GAUGE"/>
		</columns>
	    </query>
	    <query ifType="ignore" name="Q_key_cache_block_size">
		<statement>
		    <queryString>SELECT VARIABLE_VALUE AS key_cache_block_size FROM GLOBAL_VARIABLES WHERE VARIABLE_NAME ='KEY_CACHE_BLOCK_SIZE'</queryString>
		</statement>
		<columns>
		    <column alias="MyKeyCacheBlkSize" data-source-name="key_cache_block_size" name="key_cache_block_size" type="GAUGE"/>
		</columns>
	    </query>
	    <query ifType="ignore" name="Q_Key_blocks_unused">
		<statement>
		    <queryString>SELECT VARIABLE_VALUE AS Key_blocks_unused FROM GLOBAL_STATUS WHERE VARIABLE_NAME = 'KEY_BLOCKS_UNUSED'</queryString>
		</statement>
		<columns>
		    <column alias="MyKeyBlkUnused" data-source-name="Key_blocks_unused" name="Key_blocks_unused" type="GAUGE"/>
		</columns>
	    </query>
	    <query ifType="ignore" name="Q_Key_read_requests">
		<statement>
		    <queryString>SELECT VARIABLE_VALUE AS Key_read_requests FROM GLOBAL_STATUS WHERE VARIABLE_NAME = 'KEY_READ_REQUESTS'</queryString>
		</statement>
		<columns>
		    <column alias="MyKeyReadReqs" data-source-name="Key_read_requests" name="Key_read_requests" type="COUNTER"/>
		</columns>
	    </query>
	    <query ifType="ignore" name="Q_Key_reads">
		<statement>
		    <queryString>SELECT VARIABLE_VALUE AS Key_reads FROM GLOBAL_STATUS WHERE VARIABLE_NAME = 'KEY_READS'</queryString>
		</statement>
		<columns>
		    <column alias="MyKeyReads" data-source-name="Key_reads" name="Key_reads" type="COUNTER"/>
		</columns>
	    </query>
	    <query ifType="ignore" name="Q_Key_write_requests">
		<statement>
		    <queryString>SELECT VARIABLE_VALUE AS Key_write_requests FROM GLOBAL_STATUS WHERE VARIABLE_NAME = 'KEY_WRITE_REQUESTS'</queryString>
		</statement>
		<columns>
		    <column alias="MyKeyWriteReqs" data-source-name="Key_write_requests" name="Key_write_requests" type="COUNTER"/>
		</columns>
	    </query>
	    <query ifType="ignore" name="Q_Key_writes">
		<statement>
		    <queryString>SELECT VARIABLE_VALUE AS Key_writes FROM GLOBAL_STATUS WHERE VARIABLE_NAME = 'KEY_WRITES'</queryString>
		</statement>
		<columns>
		    <column alias="MyKeyWrites" data-source-name="Key_writes" name="Key_writes" type="COUNTER"/>
		</columns>
	    </query>
	    <query ifType="ignore" name="Q_Open_files">
		<statement>
		    <queryString>SELECT VARIABLE_VALUE AS Open_files FROM GLOBAL_STATUS WHERE VARIABLE_NAME = 'OPEN_FILES'</queryString>
		</statement>
		<columns>
		    <column alias="MyOpenFiles" data-source-name="Open_files" name="Open_files" type="GAUGE"/>
		</columns>
	    </query>
	    <query ifType="ignore" name="Q_Open_tables">
		<statement>
		    <queryString>SELECT VARIABLE_VALUE AS Open_tables FROM GLOBAL_STATUS WHERE VARIABLE_NAME = 'OPEN_TABLES'</queryString>
		</statement>
		<columns>
		    <column alias="MyOpenTables" data-source-name="Open_tables" name="Open_tables" type="GAUGE"/>
		</columns>
	    </query>
	    <query ifType="ignore" name="Q_table_open_cache">
		<statement>
		    <queryString>SELECT VARIABLE_VALUE AS table_open_cache FROM GLOBAL_VARIABLES WHERE VARIABLE_NAME ='TABLE_OPEN_CACHE'</queryString>
		</statement>
		<columns>
		    <column alias="MyTableOpenCache" data-source-name="table_open_cache" name="table_open_cache" type="GAUGE"/>
		</columns>
	    </query>
	    <query ifType="ignore" name="Q_Questions">
		<statement>
		    <queryString>SELECT VARIABLE_VALUE AS Questions FROM GLOBAL_STATUS WHERE VARIABLE_NAME = 'QUESTIONS'</queryString>
		</statement>
		<columns>
		    <column alias="MyQuestions" data-source-name="Questions" name="Questions" type="COUNTER"/>
		</columns>
	    </query>
	    <query ifType="ignore" name="Q_Slow_queries">
		<statement>
		    <queryString>SELECT VARIABLE_VALUE AS Slow_queries FROM GLOBAL_STATUS WHERE VARIABLE_NAME = 'SLOW_QUERIES'</queryString>
		</statement>
		<columns>
		    <column alias="MySlowQueries" data-source-name="Slow_queries" name="Slow_queries" type="COUNTER"/>
		</columns>
	    </query>
	    <query ifType="ignore" name="Q_Connections">
		<statement>
		    <queryString>SELECT VARIABLE_VALUE AS Connections FROM GLOBAL_STATUS WHERE VARIABLE_NAME = 'CONNECTIONS'</queryString>
		</statement>
		<columns>
		    <column alias="MyConnections" data-source-name="Connections" name="Connections" type="COUNTER"/>
		</columns>
	    </query>
	    <query ifType="ignore" name="Q_Threads_created">
		<statement>
		    <queryString>SELECT VARIABLE_VALUE Threads_created FROM GLOBAL_STATUS WHERE VARIABLE_NAME = 'THREADS_CREATED'</queryString>
		</statement>
		<columns>
		    <column alias="MyThreadsCreatd" data-source-name="Threads_created" name="Threads_created" type="COUNTER"/>
		</columns>
	    </query>
	    <query ifType="ignore" name="Q_Threads_cached">
		<statement>
		    <queryString>SELECT VARIABLE_VALUE AS Threads_cached FROM GLOBAL_STATUS WHERE VARIABLE_NAME = 'THREADS_CACHED'</queryString>
		</statement>
		<columns>
		    <column alias="MyThreadsCachd" data-source-name="Threads_cached" name="Threads_cached" type="GAUGE"/>
		</columns>
	    </query>
	    <query ifType="ignore" name="Q_Threads_connected">
		<statement>
		    <queryString>SELECT VARIABLE_VALUE AS Threads_connected FROM GLOBAL_STATUS WHERE VARIABLE_NAME = 'THREADS_CONNECTED'</queryString>
		</statement>
		<columns>
		    <column alias="MyThreadsCnnctd" data-source-name="Threads_connected" name="Threads_connected" type="GAUGE"/>
		</columns>
	    </query>
	    <query ifType="ignore" name="Q_Threads_running">
		<statement>
		    <queryString>SELECT VARIABLE_VALUE AS Threads_running FROM GLOBAL_STATUS WHERE VARIABLE_NAME = 'THREADS_RUNNING'</queryString>
		</statement>
		<columns>
		    <column alias="MyThreadsRunng" data-source-name="Threads_running" name="Threads_running" type="GAUGE"/>
		</columns>
	    </query>
	</queries>
    </jdbc-collection>
    <jdbc-collection name="PostgreSQL">
        <rrd step="300">
            <rra>RRA:AVERAGE:0.5:1:2016</rra>
            <rra>RRA:AVERAGE:0.5:12:1488</rra>
            <rra>RRA:AVERAGE:0.5:288:366</rra>
            <rra>RRA:MAX:0.5:288:366</rra>
            <rra>RRA:MIN:0.5:288:366</rra>
        </rrd>
        <queries>
            <query ifType="all" instance-column="spcname" name="pg_tablespace_size" resourceType="pgTableSpace">
                <statement>
                    <queryString>
                    SELECT spcname, pg_tablespace_size(pg_tablespace.spcname) AS ts_size
                    FROM pg_tablespace
                    </queryString>
                </statement>
                <columns>
                    <column alias="spcname" data-source-name="spcname" name="spcname" type="string"/>
                    <column alias="ts_size" data-source-name="ts_size" name="ts_size" type="gauge"/>
                </columns>
            </query>
            <query ifType="all" instance-column="datname" name="pg_stat_database" resourceType="pgDatabase">
                <statement>
                    <queryString>
                    SELECT datname, numbackends, xact_commit, xact_rollback, blks_read, blks_hit,
                           pg_database_size(pg_stat_database.datname) AS db_size
                    FROM pg_stat_database
                    WHERE datname NOT IN ('template0', 'template1')
                    </queryString>
                </statement>
                <columns>
                    <column alias="datname" data-source-name="datname" name="datname" type="string"/>
                    <column alias="numbackends" data-source-name="numbackends" name="numbackends" type="gauge"/>
                    <column alias="xact_commit" data-source-name="xact_commit" name="xact_commit" type="counter"/>
                    <column alias="xact_rollback" data-source-name="xact_rollback" name="xact_rollback" type="counter"/>
                    <column alias="blks_read" data-source-name="blks_read" name="blks_read" type="counter"/>
                    <column alias="blks_hit" data-source-name="blks_hit" name="blks_hit" type="counter"/>
                    <column alias="db_size" data-source-name="db_size" name="db_size" type="gauge"/>
                </columns>
            </query>
        </queries>
    </jdbc-collection>
</jdbc-datacollection-config>