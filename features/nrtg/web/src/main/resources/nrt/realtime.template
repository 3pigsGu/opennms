<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
<head>
        <!-- NRT JavaScript stuff -->        
        <script type="text/javascript" src="/opennms/js/jquery/jquery.js"></script>
        
        <script type="text/javascript" src="/opennms/js/amq_jquery_adapter.js"></script>
        <script type="text/javascript" src="/opennms/js/amq.js"></script>
        
        <script tyep="text/javascript" src="/opennms/js/d3.v2.js"></script>
        <script type="text/javascript" src="/opennms/js/rrdgraph.js"></script>

<style type="text/css">

html, body, div {
  padding: 0;
  margin: 0;
}
</style>

    
<script type="text/javascript">
    

// Eingabe foo Zeug
$(function() {
    
    // Receive inbound JavaScript variables from the controller.
    var collectionTaskId = "${nrtCollectionTaskId}";
    var rrdGraphString = "${rrdGraphString}";

    var metricsMapping = {
        ${metricsMapping}
    };

    // Represents the frequency of data requests.
    var jobPuplishingInterval = 500;
    
    // Create and initialize graph and real time wrapper
    var graphs = RRDGraph.init('.rrdgraph', rrdGraphString);
    var graph = graphs[0];
    
    var dataCollector = new RRDGraph.DataCollector(graph.config, graph.data, metricsMapping);
    
    // Create AMQ object.
    var amq = org.activemq.Amq;

    // Initialize the ActiveMQ listener.
    amq.init({
        uri: '/opennms/amq', 
        logging: true, 
        timeout: 45, 
        clientId:(new Date()).getTime().toString() 
    });

    amq.addListener('RealtimeHandler', collectionTaskId, function(message) {
        if (message != null) {
//            var dataSet = $.parseJSON(message.textContent);
            var dataSet = eval(message.textContent);

            // Debug output
            $("#debug_value_count").html(parseInt($("#debug_value_count").html()) + 1);
            
            $("#debug_message_count").html(parseInt($("#debug_message_count").html()) + dataSet.length);
            $("#debug_messages").html(message.textContent);

            dataSet = $.map(dataSet, function(e, i) {
                return {
                    'metricId': e['metricId'],
                    'netInterface': e['netInterface'],
                    'nodeId': e['nodeId'],
                    'service': e['service'],
                    'timeStamp': parseInt(e['timeStamp']),
                    'value': parseInt(e['value'])
                };
            });
            
            dataCollector.push(dataSet);
        }
    });

    // Timer for  AJAX nrtCollectionJobTrigger to republish the CollectionJobCollectionJob
    var refreshTimerJob = {
        /// Submits the AJAX collection job request and requeues the timer.
        submitJob: function() {
            $.get("/opennms/osgi/nrt/starter","nrtCollectionTaskId="+collectionTaskId,function(data) { $("#errorDiv").text(data); }, "html");
            this.timeoutID = setTimeout(function(){refreshTimerJob.submitJob()}, this.jobPuplishingInterval);
        },

        /// Used for setting up and starting the refresh timer job.
        setup: function(refreshTicks) {
            this.stop();
            this.jobPuplishingInterval = refreshTicks;
            this.timeoutID = setTimeout(function(){refreshTimerJob.submitJob()}, this.jobPuplishingInterval);
        },

        /// Used for stopping the refresh timer.
        stop: function() {
            if(typeof this.timeoutID == "number") {
                clearTimeout(this.timeoutID);
                delete this.timeoutID;
            }
        }
    };
    
    // Set up the input box that allows us to adjust the interval in which data points are graphed.
    $('#jobPuplishingInterval').val(jobPuplishingInterval);
    $('#jobPuplishingInterval').bind('change', function() {
        jobPuplishingInterval = $(this).val();
        refreshTimerJob.setup(jobPuplishingInterval);
    });
    
    // Start the AJAX job timer.
    refreshTimerJob.setup(jobPuplishingInterval);
    var graphTitle = ${graphTitle};
    var graphName = ${graphName};
    var graphDescription = ${graphDescription};
});
</script>

</head>
       
<body>        
    <div id="main"></div>
    <div class="rrdgraph" data-src="realtime=1"></div>
    <div>Refresh Interval (in ms)<input id="jobPuplishingInterval" name="jobPuplishingInterval"></input></div>
    <div>Graph Duration (in seconds)<input id="durationInterval" name="durationInterval"></input></div>
    <div id="errorDiv"></div>
    <div id="debug_rrd_string"><pre>${rrdGraphString}</pre></div>
    <div id="debug_value_count">0</div>
    <div id="debug_message_count">0</div>
    <div id="debug_messages">No Message jet</div>  
</body>
