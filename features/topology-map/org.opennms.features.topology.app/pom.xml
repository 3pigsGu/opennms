<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <parent>
    <relativePath>../poms/compiled/</relativePath>
    <groupId>org.opennms.features.topology.build</groupId>
    <artifactId>compiled-bundle-settings</artifactId>
    <version>1.11.1-SNAPSHOT</version>
  </parent>

  <modelVersion>4.0.0</modelVersion>
  <groupId>org.opennms.features.topology</groupId>
  <artifactId>org.opennms.features.topology.app</artifactId>
  <version>1.11.1-SNAPSHOT</version>

  <name>${bundle.symbolicName}</name>

  <packaging>bundle</packaging>
  
  <properties>
    <bundle.symbolicName>org.opennms.features.topology.app</bundle.symbolicName>
    <bundle.namespace>org.opennms.features.topology.app</bundle.namespace>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <vaadin.version>6.7.1</vaadin.version>
    <gwt.version>2.3.0</gwt.version>
    <gwt.plugin.version>2.2.0</gwt.plugin.version>
  </properties>

  <build>
    <plugins>
            <!-- Compiles your custom GWT components with the GWT compiler -->
      <!-- A hosted mode browser for client-side widget debugging can be run with the goal gwt:run after uncommenting the
        correct line below. A remote debugger can then be connected to port 8998. Note that e.g. a Jetty server should be running
        with the server side parts - use the goal jetty:run . -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>gwt-maven-plugin</artifactId>
        <version>${gwt.plugin.version}</version>
        <configuration>
          <!-- <modules> <module>org.opennms.features.vaadin.topology.gwt.MyWidgetSet</module> </modules> -->
          <webappDirectory>target/gwt/VAADIN/widgetsets</webappDirectory>
          <extraJvmArgs>-Xmx512M -Xss1024k</extraJvmArgs>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>resources</goal>
              <goal>compile</goal>
            </goals>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>com.google.gwt</groupId>
            <artifactId>gwt-dev</artifactId>
            <version>${gwt.version}</version>
          </dependency>
          <dependency>
            <groupId>com.google.gwt</groupId>
            <artifactId>gwt-user</artifactId>
            <version>${gwt.version}</version>
          </dependency>
        </dependencies>
      </plugin>
      
      <plugin>
        <groupId>com.vaadin</groupId>
        <artifactId>vaadin-maven-plugin</artifactId>
        <version>1.0.2</version>
        <executions>
          <execution>
            <configuration></configuration>
            <goals>
              <goal>update-widgetset</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      
      
    </plugins>
  </build>

  <dependencies>
    <!--
     | uncomment to add all imported (non-local) bundles to your compilation classpath
    <dependency>
      <type>pom</type>
      <groupId>${parent.groupId}</groupId>
      <artifactId>provision</artifactId>
      <optional>true</optional>
    </dependency>
    -->

    <dependency>
      <groupId>org.opennms.features.topology</groupId>
      <artifactId>org.opennms.features.topology.api</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
        <groupId>org.ops4j.pax.vaadin</groupId>
        <artifactId>service</artifactId>
        <version>0.1.0-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>com.vaadin</groupId>
      <artifactId>vaadin</artifactId>
      <version>${vaadin.version}</version>
    </dependency>
    <dependency>
      <groupId>com.google.gwt</groupId>
      <artifactId>gwt-user</artifactId>
      <version>${gwt.version}</version>
      <scope>provided</scope>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>javax.validation</groupId>
      <artifactId>validation-api</artifactId>
      <version>1.0.0.GA</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>javax.validation</groupId>
      <artifactId>validation-api</artifactId>
      <version>1.0.0.GA</version>
      <classifier>sources</classifier>
      <scope>provided</scope>
	</dependency>
	<dependency>
	  <groupId>net.sf.jung</groupId>
	  <artifactId>jung-api</artifactId>
	  <version>2.0.1</version>
	</dependency>
	<dependency>
	  <groupId>net.sf.jung</groupId>
	  <artifactId>jung-graph-impl</artifactId>
	  <version>2.0.1</version>
	</dependency>
	<dependency>
	  <groupId>net.sf.jung</groupId>
	  <artifactId>jung-algorithms</artifactId>
	  <version>2.0.1</version>
	</dependency>
	<dependency>
	  <groupId>net.sf.jung</groupId>
	  <artifactId>jung-visualization</artifactId>
	  <version>2.0.1</version>
	</dependency>
        <!-- jung dependencies embedded 
	<dependency>
	  <groupId>colt</groupId>
	  <artifactId>colt</artifactId>
	  <version>1.2.0</version>
	</dependency>
        -->

        

    <!-- <dependency>
<groupId>net.sourceforge.collections</groupId>
<artifactId>collections-generic</artifactId>
<version>4.01</version>
<scope>compile</scope>
</dependency>
-->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.8.2</version>
      <scope>test</scope>
    </dependency>
    
    
    
  </dependencies>

</project>
