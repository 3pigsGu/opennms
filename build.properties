database.name=opennms
database.user=opennms
database.password=opennms

build.java.include.dir=/usr/lib/jvm/java-1.4.2-sun-1.4.2.03/include/linux

build.postgresql.include.dir=/usr/include/pgsql
build.postgresql.lib.dir=/usr/lib/pgsql

# This is where your rrd.h file lives
build.rrdtool.include.dir=/usr/include
# This is where your librrd.so or librrd.a lives
build.rrdtool.lib.dir=/usr/lib

 <!-- rpm specific -->
 <property name="rpm.sign" value="false"/>

  <property file="build.properties"/>
  <property name="install" value="${root.installprefix}${root.install}"/>
  <property name="install.initdir" value="${root.installprefix}${root.install.initdir}"/>
  <property name="install.sbindir" value="${root.installprefix}${root.install.sbindir}"/>
  <property name="install.contrib" value="${root.installprefix}${root.install.contrib}"/>
  <property name="install.rrdtool" value="${root.installprefix}${root.install.rrdtool}"/>
  <property name="install.share" value="${root.installprefix}${root.install.share}"/>
  <property name="install.rrdtool" value="${root.installprefix}${root.install.rrdtool}"/>
  <property name="install.servlets" value="${root.installprefix}${root.install.servlets}"/>
  <property name="install.logs" value="${root.installprefix}${root.install.logs}"/>
  <property name="install.pid" value="${root.installprefix}${root.install.pid}"/>
  <property name="opennms.version.string" value="${product.version}-${opennms.release.string}"/>

  <condition property="wasrpm" value="true">
   <available property="wasrpm" file="${root.build}/rpm" type="dir"/>
  </condition>
  <condition property="wasrpm" value="false">
   <not>
    <available property="wasrpm" file="${root.build}/rpm" type="dir"/>
   </not>
  </condition>

  <condition property="rpm.tainted" value="true">
   <or>
    <istrue value="${wasrpm}"/>
    <istrue value="${isrpm}"/>
   </or>
  </condition>

  <condition property="filter.overwrite" value="true">
    <istrue value="${rpm.tainted}"/>
  </condition>
  <condition property="filter.overwrite" value="false">
    <isfalse value="${rpm.tainted}"/>
  </condition>

  <!-- set filters -->
  <filter filtersfile="${root.source}/build.properties" />
  <filter token="install.log.dir" value="${root.install.logs}"/>
  <filter token="opennms.version" value="${product.version}"/>
  <filter token="opennms.release" value="${product.release}"/>
  <filter token="opennms.snapshot" value="${product.snapshot}"/>
  <filter token="opennms.version.string" value="${opennms.version.string}"/>
  <filter token="opennms.release.string" value="${opennms.release.string}"/>
  <filter token="root.install.perl" value="${root.install.perl}"/>
  <filter token="root.source" value="${root.source}"/>
  <filter token="root.build" value="${root.build}"/>
  <filter token="root.install" value="${root.install}"/>
  <filter token="root.install.initdir" value="${root.install.initdir}"/>
  <filter token="root.install.sbindir" value="${root.install.sbindir}"/>
  <filter token="root.install.contrib" value="${root.install.contrib}"/>
  <filter token="root.install.servlets" value="${root.install.servlets}"/>
  <filter token="root.install.share" value="${root.install.share}"/>
  <filter token="root.install.rrdtool" value="${root.install.rrdtool}"/>
  <filter token="root.install.postgresql" value="${root.install.postgresql}"/>
  <filter token="root.install.logs" value="${root.install.logs}"/>
  <filter token="root.install.pid" value="${root.install.pid}"/>
  <filter token="root.installprefix" value="${root.installprefix}"/>
  <filter token="relative.build" value="${relative.build}"/>
  <filter token="relative.install" value="${relative.install}"/>
  <filter token="relative.install.initdir" value="${relative.install.initdir}"/>
  <filter token="relative.install.sbindir" value="${relative.install.sbindir}"/>
  <filter token="relative.install.contrib" value="${relative.install.contrib}"/>
  <filter token="relative.install.servlets" value="${relative.install.servlets}"/>
  <filter token="relative.install.share" value="${relative.install.share}"/>
  <filter token="relative.install.rrdtool" value="${relative.install.rrdtool}"/>
  <filter token="relative.install.postgresql" value="${relative.install.postgresql}"/>
  <filter token="relative.install.logs" value="${relative.install.logs}"/>
  <filter token="relative.install.pid" value="${relative.install.pid}"/>
  <filter token="install.database.driver" value="${install.database.driver}"/>
  <filter token="install.database.url" value="${install.database.url}"/>
  <filter token="install.database.user" value="${install.database.user}"/>
  <filter token="install.database.password" value="${install.database.password}"/>
  <filter token="ant.project.name" value="${ant.project.name}"/>
  <filter token="compile.soext" value="${compile.soext}"/>
  <filter token="compile.jniext" value="${compile.jniext}"/>
 
  <!-- init wrapup -->
  <antcall target="print.debug"/>
  <property name="init.done" value="true"/>
 </target>
 
