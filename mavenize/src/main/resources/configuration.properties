#
# Definitions for module type
#
moduleType.shlib.class = org.opennms.mavenize.ShlibModuleType
moduleType.shlib.platforms = linux, macosx, freebsd, solaris

moduleType.shlib.linux.subModuleType = so
moduleType.shlib.linux.platformName = Linux
moduleType.shlib.linux.compilerProvider = generic
moduleType.shlib.linux.compilerOptions = -fPIC -O -D__LINUX__
moduleType.shlib.linux.linkerOptions = -shared -lc -ldl
moduleType.shlib.linux.extraIncludes = ${build.postgresql.include.dir}

moduleType.shlib.macosx.subModuleType = dylib
moduleType.shlib.macosx.platformName = MacOSX
moduleType.shlib.macosx.compilerProvider = generic
moduleType.shlib.macosx.compilerOptions = -fPIC -O -D__DARWIN__
moduleType.shlib.macosx.linkerOptions = -prebind -dynamiclib -lc -ldl
moduleType.shlib.macosx.extraIncludes = ${build.postgresql.include.dir}

moduleType.shlib.freebsd.subModuleType = so
moduleType.shlib.freebsd.platformName = FreeBSD
moduleType.shlib.freebsd.compilerProvider = generic
moduleType.shlib.freebsd.compilerOptions = -fPIC -O -D__FreeBSD__
moduleType.shlib.freebsd.linkerOptions = -shared -lc -ldl
moduleType.shlib.freebsd.extraIncludes = ${build.postgresql.include.dir}

moduleType.shlib.solaris.subModuleType = so
moduleType.shlib.solaris.platformName = Solaris
moduleType.shlib.solaris.compilerProvider = generic
moduleType.shlib.solaris.compilerOptions = -fPIC -O -D__SOLARIS__
moduleType.shlib.solaris.linkerOptions = -shared -lc -ldl
moduleType.shlib.solaris.extraIncludes = ${build.postgresql.include.dir}

moduleType.jni.class = org.opennms.mavenize.JniModuleType
moduleType.jni.platforms = linux, macosx, freebsd, solaris

moduleType.jni.linux.subModuleType = so
moduleType.jni.linux.platformName = Linux
moduleType.jni.linux.compilerProvider = generic
moduleType.jni.linux.compilerOptions = -fPIC -O -D__LINUX__
moduleType.jni.linux.linkerOptions = -shared  -L${build.rrd.lib.dir} -lrrd -lc -ldl
moduleType.jni.linux.javahOS = linux
moduleType.jni.linux.extraIncludes = ${build.rrd.include.dir}

moduleType.jni.macosx.subModuleType = jnilib
moduleType.jni.macosx.platformName = MacOSX
moduleType.jni.macosx.compilerProvider = generic
moduleType.jni.macosx.compilerOptions = -fPIC -O -D__DARWIN__
moduleType.jni.macosx.linkerOptions = -prebind -dynamiclib  -L${build.rrd.lib.dir} -lrrd -lc -ldl
moduleType.jni.macosx.javahOS = macosx
moduleType.jni.macosx.jdkIncludePath = ${java.home}/include
moduleType.jni.macosx.javahImplementation = macos
moduleType.jni.macosx.extraIncludes = ${build.rrd.include.dir}

moduleType.jni.freebsd.subModuleType = so
moduleType.jni.freebsd.platformName = FreeBSD
moduleType.jni.freebsd.compilerProvider = generic
moduleType.jni.freebsd.compilerOptions = -fPIC -O -D__FreeBSD__
moduleType.jni.freebsd.linkerOptions = -shared -lc -ldl
moduleType.jni.freebsd.extraIncludes = ${build.postgresql.include.dir}

moduleType.jni.solaris.subModuleType = so
moduleType.jni.solaris.platformName = Solaris
moduleType.jni.solaris.compilerProvider = generic
moduleType.jni.solaris.compilerOptions = -fPIC -O -D__SOLARIS__
moduleType.jni.solaris.linkerOptions = -shared -lc -ldl
moduleType.jni.solaris.extraIncludes = ${build.postgresql.include.dir}

#
# Definitions for source types
#

# properties for a normal jar file
sourceType.java.standardDir = src/main/java

# properties for standard runtime resources
sourceType.resource.standardDir = src/main/resources

# properties for junit tests
sourceType.test.standardDir = src/test/java

# properties for resources used only be tests
sourceType.test-resource.standardDir = src/test/resources

# properties for a war file
sourceType.webapp.standardDir = src/main/webapp

# properties for castor processed xsds
sourceType.castor.standardDir = src/main/castor
sourceType.castor.plugins = castor

# properties for sablecc grammers
sourceType.sablecc.standardDir = src/main/sablecc
sourceType.sablecc.plugins = sablecc

# properties for native code that uses the native plugin
sourceType.native.standardDir = src/main/native

# properties for docbook doc files
sourceType.docbook.standardDir=src/main/site/docbook

#
# Definitions for plugins
#

# castor plugin
plugin.castor.groupId = org.codehaus.mojo
plugin.castor.artifactId = castor-maven-plugin
plugin.castor.goals = generate

# sablecc plugin
plugin.sablecc.groupId = org.codehaus.mojo
plugin.sablecc.artifactId = sablecc-maven-plugin
plugin.sablecc.goals = generate

# native plugin
plugin.native.groupId = org.codehaus.mojo
plugin.native.artifactId = native-maven-plugin
	