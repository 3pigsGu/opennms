<?xml version="1.0" encoding="UTF-8"?>
<chapter>
  <title>Platform-Specific OpenNMS Installation Notes</title>

  <section>
    <title>Debian</title>

    <para>OpenNMS is supported on Debian, and can be installed using apt.
    However, due to licensing issues, we cannot distribute a version of Sun's
    Java SDK, so some extra steps are required.</para>

    <section>
      <title>Woody</title>

      <para>Add the following to /etc/apt/sources.list and update, (i.e.
      "apt-get update"):</para>

      <para><programlisting>deb http://debian.opennms.org/ debian/opennms stable</programlisting></para>

      <para>Then obtain and install a suitable version of java.</para>

      <para>Because of licensing issues, a suitable java sdk cannot be
      distributed with OpenNMS so you will have to obtain and install one
      yourself prior to installing OpenNMS. You have several options
      here:</para>

      <orderedlist>
        <listitem>
          <para>Use the sun-jdk1.4-installer package and build script to
          download the j2sdk from Sun and build your own j2sdk1.4 package,
          (recommended).</para>

          <para>Building and installing a j2sdk1.4 package:</para>

          <itemizedlist>
            <listitem>
              <para>The java-common package is a dependency for the j2sdk1.4
              package you will be creating, and since it will be installed by
              dpkg, APT will not be there to pull it in so install it
              first.</para>

              <para><programlisting><computeroutput># </computeroutput><command>apt-get install java-common</command></programlisting></para>
            </listitem>

            <listitem>
              <para>Next, install the sun-jdk1.4-installer package</para>

              <para><programlisting><computeroutput># </computeroutput><command>apt-get install sun-jdk1.4-installer</command></programlisting></para>
            </listitem>

            <listitem>
              <para>Download the 1.4.2 SDK from Sun, get the non-RPM binary
              package</para>
            </listitem>

            <listitem>
              <para>Then run the following command to build the
              package:</para>

              <para><programlisting><computeroutput># </computeroutput><command>build-sun-jdk14 ./j2sdk-1_4_2_05-linux-i586.bin</command></programlisting></para>

              <para>where <filename>j2sdk-1_4_2_05-linux-i586.bin</filename>
              is the binary file you downloaded from Sun.</para>
            </listitem>

            <listitem>
              <para>And finally install the package:</para>

              <para><programlisting><computeroutput># </computeroutput><command>dpkg -i j2sdk-1_4_2_05-linux-i586.deb</command></programlisting></para>

              <para>where <filename>j2sdk-1_4_2_05-linux-i586.deb</filename>
              is the Debian package that was just created by
              <filename>build-sun-jdk14</filename>.</para>
            </listitem>
          </itemizedlist>
        </listitem>

        <listitem>
          <para>Obtain and install and your own version and meet the OpenNMS
          packages dependencies by installing the java-virtual-machine meta
          package.</para>

          <para><programlisting><computeroutput># </computeroutput><command>apt-get install java-virtual-machine</command></programlisting></para>
        </listitem>
      </orderedlist>

      <para>Then, install OpenNMS:</para>

      <para><programlisting><computeroutput># </computeroutput><command>apt-get install opennms</command></programlisting></para>

      <para>Optionally install the documentation and/or contrib
      packages</para>

      <para><programlisting><computeroutput># </computeroutput><command>apt-get install opennms-doc opennms-contrib</command></programlisting></para>
    </section>

    <section>
      <title>Sid</title>

      <para>Add the following to <filename>/etc/apt/sources.list</filename>
      and update, (i.e. "<code>apt-get update</code>"):</para>

      <para><programlisting>deb http://debian.opennms.org/ debian/opennms unstable</programlisting></para>

      <para>Then obtain and install a suitable version of java.</para>

      <para>Because of licensing issues, a suitable java sdk cannot be
      distributed with OpenNMS so you will have to obtain and install one
      yourself prior to installing OpenNMS. You have several options
      here:</para>

      <orderedlist>
        <listitem>
          <para>Use the <code>sun-jdk1.4-installer</code> package and build
          script to download the <code>j2sdk</code> from Sun and build your
          own <code>j2sdk1.4</code> package
          (<emphasis>recommended</emphasis>).</para>

          <para>Building and installing a j2sdk1.4 package:</para>

          <itemizedlist>
            <listitem>
              <para>The <code>java-common</code> package is a dependency for
              the <code>j2sdk1.4</code> package you will be creating, and
              since it will be installed by dpkg, APT will not be there to
              pull it in so install it first:</para>

              <para><programlisting><computeroutput># </computeroutput><command>apt-get install java-common</command></programlisting></para>
            </listitem>

            <listitem>
              <para>Next, install the <code>sun-jdk1.4-installer</code>
              package:</para>

              <para><programlisting><computeroutput># </computeroutput><command>apt-get install sun-jdk1.4-installer</command></programlisting></para>
            </listitem>

            <listitem>
              <para>Download the 1.4.2 SDK from Sun. Get the non-RPM binary
              package.</para>
            </listitem>

            <listitem>
              <para>Then run the following command to build the
              package:</para>

              <para><programlisting><computeroutput># </computeroutput><command>build-sun-jdk14 ./j2sdk-1_4_2_05-linux-i586.bin</command></programlisting></para>

              <para>where <filename>j2sdk-1_4_2_05-linux-i586.bin</filename>
              is the binary file you downloaded from Sun.</para>
            </listitem>

            <listitem>
              <para>And finally install the package:</para>

              <para><programlisting><computeroutput># </computeroutput><command>dpkg -i j2sdk-1_4_2_05-linux-i586.deb</command></programlisting></para>

              <para>where <filename>j2sdk-1_4_2_05-linux-i586.deb</filename>
              is the Debian package that was just created by
              <filename>build-sun-jdk14</filename>.</para>
            </listitem>
          </itemizedlist>
        </listitem>

        <listitem>
          <para>Obtain and install and your own version and meet the OpenNMS
          packages dependencies by installing the
          <code>java-virtual-machine</code> meta-package.</para>

          <para><programlisting><computeroutput># </computeroutput><command>apt-get install java-virtual-machine</command></programlisting></para>
        </listitem>
      </orderedlist>

      <para>Then, install OpenNMS:</para>

      <para><programlisting><computeroutput># </computeroutput><command>apt-get install opennms</command></programlisting></para>

      <para>Optionally install the documentation and/or contrib
      packages</para>

      <para><programlisting><computeroutput># </computeroutput><command>apt-get install opennms-doc opennms-contrib</command></programlisting></para>

      <para>Note: Recent versions of the Tomcat package in Sid, (unstable),
      use jikes as the compiler instead of the javac from your toolkit. Open
      up <filename>/etc/tomcat4/web.xml</filename> in your favorite editor and
      comment out the "<filename>compiler init param</filename>"
      section.</para>
    </section>
  </section>

  <section>
    <title>Fedora</title>

    <para>OpenNMS is supported on Fedora. Note that <filename>yum</filename>
    and <filename>apt</filename> for RPM repositories will be available
    soon.</para>

    <section>
      <title>Fedora Core 1</title>

      <para>There are no special requirements for OpenNMS on this distribution
      of Linux, except for those configuration issues mentioned in the
      previous section.</para>
    </section>

    <section>
      <title>Fedora Core 2</title>

      <para>The Tomcat4 package that ships with Fedora Core 2 does not appear
      to reliably run, even when the OpenNMS web app is not installed. For
      now, we suggest using the tomcat4 packages on the <ulink
      url="ftp://ftp.opennms.org/pub/dependencies/tomcat4/">OpenNMS FTP
      site</ulink>. You'll want to install both packages,
      <filename>tomcat4-4.1.18-full.1jpp.noarch.rpm</filename> and
      <filename>tomcat4-webapps-4.1.18-full.1jpp.noarch.rpm</filename>.</para>

      <para>There is a bug in some kernels that can cause Java processes, and
      even the entire kernel to hang. It is documented in <ulink
      url="https://bugzilla.redhat.com/bugzilla/show_bug.cgi?id=121902">Red
      Hat bug #121902</ulink>. You should make sure you are running at least a
      2.6.6-422 kernel.</para>
    </section>
  </section>

  <section>
    <title>Mandrake</title>

    <para>OpenNMS is supported on Mandrake. Note that
    <filename>urpmi</filename> repositories will be available soon.</para>

    <section>
      <title>Mandrake 8</title>

      <para>There are no special requirements for OpenNMS on this distribution
      of Linux, except for those configuration issues mentioned in the
      previous section.</para>
    </section>

    <section>
      <title>Mandrake 9</title>

      <para>There are no special requirements for OpenNMS on this distribution
      of Linux, except for those configuration issues mentioned in the
      previous section.</para>
    </section>

    <section>
      <title>Mandrake 10</title>

      <para>There are no special requirements for OpenNMS on this distribution
      of Linux, except for those configuration issues mentioned in the
      previous section.</para>
    </section>
  </section>

  <section>
    <title>Red Hat</title>

    <para>The following section refer to the supported versions of Red Hat
    Linux. Note that <filename>yum</filename> and <filename>apt</filename> for
    RPM repositories will be available soon.</para>

    <section>
      <title>Red Hat Linux 7</title>

      <para>There are no special requirements for OpenNMS on this distribution
      of Linux, except for those configuration issues mentioned in the
      previous section. To use version 1.1. or later, you will need to install
      version 7.2 of Postgres (which was available in Red Hat Linux
      7.3).</para>
    </section>

    <section>
      <title>Red Hat Linux 8</title>

      <para>OpenNMS is currently supported on Red Hat Linux 8, but version
      1.2.0 will be the last version to support this operating system.</para>
    </section>

    <section>
      <title>Red Hat Linux 9</title>

      <para>There are no special requirements for OpenNMS on this distribution
      of Linux, except for those configuration issues mentioned in the
      previous section. Note that there was an issue with the RPM database
      "hanging" that might affect OpenNMS installation on a new system.</para>
    </section>

    <section>
      <title>Red Hat Enterprise Linux 3</title>

      <para>There are no special requirements for OpenNMS on this distribution
      of Linux, except for those configuration issues mentioned in the
      previous section.</para>
    </section>
  </section>

  <section>
    <title>Solaris</title>

    <para>OpenNMS is supported on Solaris, both on SPARC and x86.</para>

    <para>However, there are some extra steps required for a trouble free
    install on Solaris.</para>

    <para>As with all OpenNMS installations, you need a Java SDK. In addtion,
    the PostgreSQL, Tomcat4 and RRDtool packages can be harder to find.</para>

    <para>A good source for open-source packages is <ulink
    url="http://www.sunfreeware.com">SunFreeware</ulink>. Most of the packages
    there install in <filename>/usr/local</filename>, so we've adopted that
    convention for the packages we create. We have also included some packages
    on our FTP site in the <filename>/pub/dependencies</filename>
    directory.</para>

    <section>
      <title>Environment Variables</title>

      <para>You will want to set up the following environment
      variables:</para>

      <programlisting><computeroutput># </computeroutput><command><computeroutput>JAVA_HOME=/usr/java/j2sdk1.4.2_02</computeroutput></command><remark><command><computeroutput>  </computeroutput></command>(or whatever your Java home dir is)</remark>
<computeroutput># </computeroutput><command>LD_LIBRARY_PATH=/usr/local/lib:/usr/local/ssl/lib/:/usr/local/pgsql/lib:/usr/local/opennms/lib:/usr/local/pgsql/include/server/lib:/usr/local/pgsql/include/internal/lib
</command><computeroutput># </computeroutput><command>POSTGRES_LIB=/usr/local/pgsql/lib
</command><computeroutput># <command>PERL5LIB=/usr/local/lib/perl5</command><computeroutput>
# </computeroutput><command>export JAVA_HOME LD_LIBRARY_PATH POSTGRES_LIB PERL5LIB</command></computeroutput></programlisting>
    </section>

    <section>
      <title>Creating the Database</title>

      <para>You will need to create an <code>opennms</code> database.</para>

      <para>As the <code>postgres</code> user, go to the
      <filename>/usr/local/pgsql/bin</filename> directory, and run the
      following command:</para>

      <para><programlisting><computeroutput># </computeroutput><command>./initdb -D /usr/local/pgsql/data -E ""</command></programlisting></para>

      <para>This will create the database. Following the instructions in the
      section above, modify the <filename>pg_hba.conf</filename> and
      <filename>postgresql.conf</filename> files.</para>

      <para>Then you'll need to start the database:</para>

      <para><programlisting><computeroutput># </computeroutput><command>./pg_ctl -D /usr/local/pgsql/data start</command></programlisting></para>

      <para>Now you are finished as the <code>postgres</code> user.</para>

      <para>As root, initialize the OpenNMS database:</para>

      <para><programlisting><computeroutput># </computeroutput><command>/usr/local/opennms/bin/install -disU</command></programlisting></para>
    </section>

    <section>
      <title>Startup</title>

      <para>Now you are ready to start OpenNMS. After modifying the files in
      /usr/local/opennms/etc (particularly the discovery configuration file),
      run:</para>

      <para><programlisting><computeroutput># </computeroutput><command><command>/usr/local/opennms/bin/opennms.sh start</command></command></programlisting></para>

      <para>and then start Tomcat4 (restart it if it is already
      running):</para>

      <para><programlisting><computeroutput># </computeroutput><command>/usr/local/tomcat/bin/startup.sh</command></programlisting></para>

      <para><emphasis role="bold">Note: </emphasis>The shell you start this in
      will behave like a console, and you may get some JMX messages
      like:</para>

      <para><programlisting>DEBUG: pq_recvbuf: unexpected EOF on client connection</programlisting></para>

      <para>Just ignore them.</para>
    </section>
  </section>

  <section>
    <title>SuSE</title>

    <para>OpenNMS is now supported on SuSE.</para>

    <section>
      <title>SuSE Linux Pro 9</title>

      <para>SuSE 9 ships with Tomcat 5, which will not work with OpenNMS. You
      will need to install Tomcat 4 from an older release of SuSE. The Tomcat
      4 packages for SuSE 8.1 seem to work just fine. They are available on
      <ulink
      url="ftp://ftp.suse.com/pub/projects/apache/jakarta-tomcat/8.1-i386/">SuSE's
      FTP site</ulink>.</para>
    </section>
  </section>
</chapter>