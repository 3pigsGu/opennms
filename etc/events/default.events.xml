<events xmlns="http://xmlns.opennms.org/xsd/eventconf">
	<event>
		<mask>
			<maskelement>
				<mename>id</mename>
				<mevalue>.1.3.6.1.2.1.10.5.0.1</mevalue>
			</maskelement>
		</mask>
		<uei>uei.opennms.org/traps/x25Restart</uei>
		<event-label>OpenNMS-defined trap event: x25Restart</event-label>
		<descr>
			&lt;p&gt;This trap means the X.25 PLE sent or received a
			restart packet. The restart that brings up the link should
			not send a x25Restart trap so the interface should send a
			linkUp trap. Sending this trap means the agent does not send
			a linkDown and linkUp trap.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			X.25 Restart: %parm[##]% args %parm[all]%
		</logmsg>
		<severity>Warning</severity>
	</event>
	<event>
		<mask>
			<maskelement>
				<mename>id</mename>
				<mevalue>.1.3.6.1.2.1.10.5.0.2</mevalue>
			</maskelement>
		</mask>
		<uei>uei.opennms.org/traps/x25Reset</uei>
		<event-label>OpenNMS-defined trap event: x25Reset</event-label>
		<descr>
			&lt;p&gt;If the PLE sends or receives a reset, the agent
			should send an x25Reset trap.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			X.25 Reset: %parm[##]% args %parm[all]%
		</logmsg>
		<severity>Warning</severity>
	</event>
	<event>
		<mask>
			<maskelement>
				<mename>id</mename>
				<mevalue>.1.3.6.1.2.1.10.21.2.0.1</mevalue>
			</maskelement>
		</mask>
		<uei>uei.opennms.org/traps/dialCtlPeerCallInfo</uei>
		<event-label>OpenNMS-defined trap event: dialCtlPeerCallInfo</event-label>
		<descr>
			&lt;p&gt;This dialCtlPeerCallInformation trap/inform is sent
			to the manager whenever a successful call clears, or a
			failed call attemp is determined to have ultimately failed.
			In the event that the call retry is active, then this is
			after all retry attempts have failed. However, only one such
			trap is sent between successful call attempts; subsequent
			call attemts result in no trap. ifOperStatus will return the
			operational status of the virtual interface associated with
			the peer to whom this call was made to.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			dialCtlPeerCallInfo trap received from enterprise %id% with
			%parm[##]% arguments: %parm[all]%
		</logmsg>
		<severity>Normal</severity>
	</event>
	<event>
		<mask>
			<maskelement>
				<mename>id</mename>
				<mevalue>.1.3.6.1.2.1.10.21.2.0.2</mevalue>
			</maskelement>
		</mask>
		<uei>uei.opennms.org/traps/dialCtlPeerCallSetup</uei>
		<event-label>OpenNMS-defined trap event: dialCtlPeerCallSetup</event-label>
		<descr>
			&lt;p&gt;This dialCtlPeerCallSetup trap/inform is sent to
			the manager whenever a call setup message is received or
			sent. ifOperStatus will return the operational status of the
			virtual interface associated with the peer to whom this call
			was made to.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			dialCtlPeerCallSetup trap received from enterprise %id% with
			%parm[##]% arguments: %parm[all]%
		</logmsg>
		<severity>Normal</severity>
	</event>
	<event>
		<mask>
			<maskelement>
				<mename>id</mename>
				<mevalue>.1.3.6.1.2.1.10.32.0.1</mevalue>
			</maskelement>
		</mask>
		<uei>uei.opennms.org/traps/frDLCIStatusChange</uei>
		<event-label>OpenNMS-defined trap event: frDLCIStatusChange</event-label>
		<descr>
			&lt;p&gt;This trap indicates that the indicated Virtual
			Circuit has changed state. It has either been created or
			invalidated, or has toggled between the active and inactive
			states.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			Frame Relay PVC state change: frCircuitIfIndex=%parm[#1]%;
			frCircuitDlci=%parm[#2]%; frCircuitState=%parm[#3]%
		</logmsg>
		<severity>Warning</severity>
	</event>
	<event>
		<mask>
			<maskelement>
				<mename>id</mename>
				<mevalue>.1.3.6.1.2.1.14.16.2.1</mevalue>
			</maskelement>
		</mask>
		<uei>uei.opennms.org/traps/ospfVirtIfStateChang</uei>
		<event-label>OpenNMS-defined trap event: ospfVirtIfStateChang</event-label>
		<descr>
			&lt;p&gt;An ospfIfStateChange trap signifies that there has
			been a change in the state of an OSPF virtual interface.
			This trap should be generated when the interface state
			regresses (e.g., goes from Point-to-Point to Down) or
			progresses to a terminal state (i.e., Point-to-
			Point).&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			ospfVirtIfStateChang trap received from enterprise %id%
		</logmsg>
		<severity>Normal</severity>
	</event>
	<event>
		<mask>
			<maskelement>
				<mename>id</mename>
				<mevalue>.1.3.6.1.2.1.14.16.2.2</mevalue>
			</maskelement>
		</mask>
		<uei>uei.opennms.org/traps/ospfNbrStateChange</uei>
		<event-label>OpenNMS-defined trap event: ospfNbrStateChange</event-label>
		<descr>
			&lt;p&gt;An ospfNbrStateChange trap signifies that there has
			been a change in the state of a non-virtual OSPF neighbor.
			This trap should be generated when the neighbor state
			regresses (e.g., goes from Attempt or Full to 1-Way or Down)
			or progresses to a terminal state (e.g., 2-Way or Full).
			When an neighbor transitions from or to Full on non-
			broadcast multi- access and broadcast networks, the trap
			should be generated by the designated router. A designated
			router transitioning to Down will be noted by
			ospfIfStateChange.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			ospfNbrStateChange trap received from enterprise %id%
		</logmsg>
		<severity>Normal</severity>
	</event>
	<event>
		<mask>
			<maskelement>
				<mename>id</mename>
				<mevalue>.1.3.6.1.2.1.14.16.2.3</mevalue>
			</maskelement>
		</mask>
		<uei>uei.opennms.org/traps/ospfVirtNbrStateChan</uei>
		<event-label>OpenNMS-defined trap event: ospfVirtNbrStateChan</event-label>
		<descr>
			&lt;p&gt;An ospfIfStateChange trap signifies that there has
			been a change in the state of an OSPF virtual neighbor. This
			trap should be generated when the neighbor state regresses
			(e.g., goes from Attempt or Full to 1-Way or Down) or
			progresses to a terminal state (e.g., Full).&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			ospfVirtNbrStateChange trap received from enterprise %id%
		</logmsg>
		<severity>Normal</severity>
	</event>
	<event>
		<mask>
			<maskelement>
				<mename>id</mename>
				<mevalue>.1.3.6.1.2.1.14.16.2.4</mevalue>
			</maskelement>
		</mask>
		<uei>uei.opennms.org/traps/ospfIfConfigError</uei>
		<event-label>OpenNMS-defined trap event: ospfIfConfigError</event-label>
		<descr>
			&lt;p&gt;An ospfIfConfigError trap signifies that a packet
			has been received on a non-virtual interface from a router
			whose configuration parameters conflict with this router's
			configuration parameters. Note that the event option
			Mismatch should cause a trap only if it prevents an
			adjacency from forming.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			ospfIfConfigError trap received from enterprise %id%
		</logmsg>
		<severity>Normal</severity>
	</event>
	<event>
		<mask>
			<maskelement>
				<mename>id</mename>
				<mevalue>.1.3.6.1.2.1.14.16.2.5</mevalue>
			</maskelement>
		</mask>
		<uei>uei.opennms.org/traps/ospfVirtIfConfigErro</uei>
		<event-label>OpenNMS-defined trap event: ospfVirtIfConfigErro</event-label>
		<descr>
			&lt;p&gt;An ospfConfigError trap signifies that a packet has
			been received on a virtual interface from a router whose
			configuration parameters conflict with this router's
			configuration parameters. Note that the event optionMismatch
			should cause a trap only if it prevents an adjacency from
			forming.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			ospfVirtIfConfigError trap received from enterprise %id%
		</logmsg>
		<severity>Normal</severity>
	</event>
	<event>
		<mask>
			<maskelement>
				<mename>id</mename>
				<mevalue>.1.3.6.1.2.1.14.16.2.6</mevalue>
			</maskelement>
		</mask>
		<uei>uei.opennms.org/traps/ospfIfAuthFailure</uei>
		<event-label>OpenNMS-defined trap event: ospfIfAuthFailure</event-label>
		<descr>
			&lt;p&gt;An ospfIfAuthFailure trap signifies that a packet
			has been received on a non-virtual interface from a router
			whose authentication key or authentication type conflicts
			with this router's authentication key or authentication
			type.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			ospfIfAuthFailure trap received from enterprise %id%
		</logmsg>
		<severity>Normal</severity>
	</event>
	<event>
		<mask>
			<maskelement>
				<mename>id</mename>
				<mevalue>.1.3.6.1.2.1.14.16.2.7</mevalue>
			</maskelement>
		</mask>
		<uei>uei.opennms.org/traps/ospfVirtIfAuthFailur</uei>
		<event-label>OpenNMS-defined trap event: ospfVirtIfAuthFailur</event-label>
		<descr>
			&lt;p&gt;An ospfVirtIfAuthFailure trap signifies that a
			packet has been received on a virtual interface from a
			router whose authentication key or authentication type
			conflicts with this router's authentication key or
			authentication type.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			ospfVirtIfAuthFailure trap received from enterprise %id%
		</logmsg>
		<severity>Normal</severity>
	</event>
	<event>
		<mask>
			<maskelement>
				<mename>id</mename>
				<mevalue>.1.3.6.1.2.1.14.16.2.8</mevalue>
			</maskelement>
		</mask>
		<uei>uei.opennms.org/traps/ospfIfRxBadPacket</uei>
		<event-label>OpenNMS-defined trap event: ospfIfRxBadPacket</event-label>
		<descr>
			&lt;p&gt;An ospfIfRxBadPacket trap signifies that an OSPF
			packet has been received on a non-virtual interface that
			cannot be parsed.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			ospfIfRxBadPacket trap received from enterprise %id%
		</logmsg>
		<severity>Normal</severity>
	</event>
	<event>
		<mask>
			<maskelement>
				<mename>id</mename>
				<mevalue>.1.3.6.1.2.1.14.16.2.9</mevalue>
			</maskelement>
		</mask>
		<uei>uei.opennms.org/traps/ospfVirtIfRxBadPacke</uei>
		<event-label>OpenNMS-defined trap event: ospfVirtIfRxBadPacke</event-label>
		<descr>
			&lt;p&gt;An ospfRxBadPacket trap signifies that an OSPF
			packet has been received on a virtual interface that cannot
			be parsed.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			ospfVirtIfRxBadPacket trap from enterprise %id%
		</logmsg>
		<severity>Normal</severity>
	</event>
	<event>
		<mask>
			<maskelement>
				<mename>id</mename>
				<mevalue>.1.3.6.1.2.1.14.16.2.10</mevalue>
			</maskelement>
		</mask>
		<uei>uei.opennms.org/traps/ospfTxRetransmit</uei>
		<event-label>OpenNMS-defined trap event: ospfTxRetransmit</event-label>
		<descr>
			&lt;p&gt;An ospfTxRetransmit trap signifies than an OSPF
			packet has been retransmitted on a nonvirtual interface. All
			packets that may be retransmitted are associated with an
			LSDB entry. The LS type, LS ID, and Router ID are used to
			identify the LSDB entry.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			ospfTxRetransmit trap received from enterprise %id%
		</logmsg>
		<severity>Normal</severity>
	</event>
	<event>
		<mask>
			<maskelement>
				<mename>id</mename>
				<mevalue>.1.3.6.1.2.1.14.16.2.11</mevalue>
			</maskelement>
		</mask>
		<uei>uei.opennms.org/traps/ospfVirtIfTxRetransm</uei>
		<event-label>OpenNMS-defined trap event: ospfVirtIfTxRetransm</event-label>
		<descr>
			&lt;p&gt;An ospfTxRetransmit trap signifies than an OSPF
			packet has been retransmitted on a virtual interface. All
			packets that may be retransmitted are associated with an
			LSDB entry. The LS type, LS ID, and Router ID are used to
			identify the LSDB entry.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			ospfVirtIfTxRetransmit trap received from enterprise %id%
		</logmsg>
		<severity>Normal</severity>
	</event>
	<event>
		<mask>
			<maskelement>
				<mename>id</mename>
				<mevalue>.1.3.6.1.2.1.14.16.2.12</mevalue>
			</maskelement>
		</mask>
		<uei>uei.opennms.org/traps/ospfOriginateLsa</uei>
		<event-label>OpenNMS-defined trap event: ospfOriginateLsa</event-label>
		<descr>
			&lt;p&gt;An ospfOriginateLsa trap signifies that a new LSA
			has been originated by this router. This trap should not be
			invoked for simple refreshes of LSAs (which happesn every 30
			minutes), but instead will only be invoked when an LSA is
			(re)originated due to a topology change. Additionally, this
			trap does not include LSAs that are being flushed because
			they have reached MaxAge.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			ospfOriginateLsa trap received from enterprise %id%
		</logmsg>
		<severity>Normal</severity>
	</event>
	<event>
		<mask>
			<maskelement>
				<mename>id</mename>
				<mevalue>.1.3.6.1.2.1.14.16.2.13</mevalue>
			</maskelement>
		</mask>
		<uei>uei.opennms.org/traps/ospfMaxAgeLsa</uei>
		<event-label>OpenNMS-defined trap event: ospfMaxAgeLsa</event-label>
		<descr>
			&lt;p&gt;An ospfMaxAgeLsa trap signifies that one of the LSA
			in the router's link-state database has aged to
			MaxAge.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			ospfMaxAgeLsa trap received from enterprise %id%
		</logmsg>
		<severity>Normal</severity>
	</event>
	<event>
		<mask>
			<maskelement>
				<mename>id</mename>
				<mevalue>.1.3.6.1.2.1.14.16.2.14</mevalue>
			</maskelement>
		</mask>
		<uei>uei.opennms.org/traps/ospfLsdbOverflow</uei>
		<event-label>OpenNMS-defined trap event: ospfLsdbOverflow</event-label>
		<descr>
			&lt;p&gt;An ospfLsdbOverflow trap signifies that the number
			of LSAs in the router's link-state database has exceeded
			ospfExtLsdbLimit.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			ospfLsdbOverflow trap received from enterprise %id%
		</logmsg>
		<severity>Normal</severity>
	</event>
	<event>
		<mask>
			<maskelement>
				<mename>id</mename>
				<mevalue>.1.3.6.1.2.1.14.16.2.15</mevalue>
			</maskelement>
		</mask>
		<uei>uei.opennms.org/traps/ospfLsdbApproachingO</uei>
		<event-label>OpenNMS-defined trap event: ospfLsdbApproachingO</event-label>
		<descr>
			&lt;p&gt;An ospfLsdbApproachingOverflow trap signifies that
			the number of LSAs in the router's linkstate database has
			exceeded ninety percent of ospfExtLsdbLimit.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			ospfLsdbApproachingOverflow trap received from enterprise
			%id%
		</logmsg>
		<severity>Normal</severity>
	</event>
	<event>
		<mask>
			<maskelement>
				<mename>id</mename>
				<mevalue>.1.3.6.1.2.1.14.16.2.16</mevalue>
			</maskelement>
		</mask>
		<uei>uei.opennms.org/traps/ospfIfStateChange</uei>
		<event-label>OpenNMS-defined trap event: ospfIfStateChange</event-label>
		<descr>
			&lt;p&gt;An ospfIfStateChange trap signifies that there has
			been a change in the state of a non-virtual OSPF interface.
			This trap should be generated when the interface state
			regresses (e.g., goes from Dr to Down) or progresses to a
			terminal state (i.e., Point-to-Point, DR Other, Dr, or
			Backup).&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			ospfIfStateChange trap received from enterprise %id%
		</logmsg>
		<severity>Normal</severity>
	</event>
	<event>
		<mask>
			<maskelement>
				<mename>id</mename>
				<mevalue>.1.3.6.1.2.1.15.7.0.1</mevalue>
			</maskelement>
		</mask>
		<uei>uei.opennms.org/traps/bgpEstablished</uei>
		<event-label>OpenNMS-defined trap event: bgpEstablished</event-label>
		<descr>
			&lt;p&gt;The BGP Established event is generated when the BGP
			FSM enters the ESTABLISHED state.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			bgpEstablished trap received from enterprise %id% with
			%parm[##]% args: bgpPeerLastError=%parm[#1]%;
			bgpPeerState=%parm[#2]%
		</logmsg>
		<severity>Normal</severity>
	</event>
	<event>
		<mask>
			<maskelement>
				<mename>id</mename>
				<mevalue>.1.3.6.1.2.1.15.7.0.2</mevalue>
			</maskelement>
		</mask>
		<uei>uei.opennms.org/traps/bgpBackwardTranstion</uei>
		<event-label>OpenNMS-defined trap event: bgpBackwardTranstion</event-label>
		<descr>
			&lt;p&gt;The BGPBackwardTransition Event is generated when
			the BGP FSM moves from a higher numbered state to a lower
			numbered state.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			bgpBackwardTranstion trap received from enterprise %id% with
			%parm[##]% args:bgpPeerLastError=%parm[#1]%;
			bgpPeerState=%parm[#2]%
		</logmsg>
		<severity>Normal</severity>
	</event>
	<event>
		<mask>
			<maskelement>
				<mename>id</mename>
				<mevalue>.1.3.6.1.2.1.16.0.1</mevalue>
			</maskelement>
		</mask>
		<uei>uei.opennms.org/traps/RMON_Rise_Alarm</uei>
		<event-label>OpenNMS-defined trap event: RMON_Rise_Alarm</event-label>
		<descr>
			&lt;p&gt;This event is sent when an RMON device exceeds a
			preconfigured threshold.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			RMON Rising Alarm from enterprise %id% with
			args:alarmIndex=%parm[#1]%; alarmVariable=%parm[#2]%;
			alarmSampleType=%parm[#3]%; alarmValue=%parm[#4]%;
			alarmRisingThreshold=%parm[#5]%
		</logmsg>
		<severity>Warning</severity>
	</event>
	<event>
		<mask>
			<maskelement>
				<mename>id</mename>
				<mevalue>.1.3.6.1.2.1.16.0.2</mevalue>
			</maskelement>
		</mask>
		<uei>uei.opennms.org/traps/RMON_Falling_Alarm</uei>
		<event-label>OpenNMS-defined trap event: RMON_Falling_Alarm</event-label>
		<descr>
			&lt;p&gt;This event is sent when an RMON device falls below
			a preconfigured threshold.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			RMON Falling Alarm from enterprise %id% with %parm[##]%
			args: alarmIndex=%parm[#1]%; alarmVariable=%parm[#2]%;
			alarmSampleType=%parm[#3]%; alarmValue=%parm[#4]%;
			alarmFallingThreshold=%parm[#5]%
		</logmsg>
		<severity>Warning</severity>
	</event>
	<event>
		<mask>
			<maskelement>
				<mename>id</mename>
				<mevalue>.1.3.6.1.2.1.16.0.3</mevalue>
			</maskelement>
		</mask>
		<uei>uei.opennms.org/traps/RMON_Packet_Match</uei>
		<event-label>OpenNMS-defined trap event: RMON_Packet_Match</event-label>
		<descr>
			&lt;p&gt;This event is sent when an RMON device matches a
			channel index.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			RMON Packet Match trap: Matched channel index #%parm[#1]%
			(%parm[#3]%); match count at %parm[#2]%
		</logmsg>
		<severity>Normal</severity>
	</event>
	<event>
		<mask>
			<maskelement>
				<mename>id</mename>
				<mevalue>.1.3.6.1.2.1.17.0.1</mevalue>
			</maskelement>
		</mask>
		<uei>uei.opennms.org/traps/newRoot</uei>
		<event-label>OpenNMS-defined trap event: newRoot</event-label>
		<descr>
			&lt;p&gt;The newRoot trap indicates that the sending agent
			has become the new root of the Spanning Tree; the trap is
			sent by a bridge soon after its election as the new root,
			e.g., upon expiration of the Topology Change Timer
			immediately subsequent to its election.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			Spanning tree root change from enterprise %id%
		</logmsg>
		<severity>Warning</severity>
	</event>
	<event>
		<mask>
			<maskelement>
				<mename>id</mename>
				<mevalue>.1.3.6.1.2.1.17.0.2</mevalue>
			</maskelement>
		</mask>
		<uei>uei.opennms.org/traps/topologyChange</uei>
		<event-label>OpenNMS-defined trap event: topologyChange</event-label>
		<descr>
			&lt;p&gt;A topologyChange trap is sent by a bridge when any
			of its configured ports transitions from the Learning state
			to the Forwarding state, or from the Forwarding state to the
			Blocking state. The trap is not sent if a newRoot trap is
			sent for the same transition.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			Spanning tree topology change from enterprise %id%
		</logmsg>
		<severity>Warning</severity>
	</event>
	<event>
		<mask>
			<maskelement>
				<mename>id</mename>
				<mevalue>.1.3.6.1.2.1.22.0.1</mevalue>
			</maskelement>
		</mask>
		<uei>uei.opennms.org/traps/rptrHealth</uei>
		<event-label>OpenNMS-defined trap event: rptrHealth</event-label>
		<descr>
			&lt;p&gt;The rptrHealth trap conveys information related to
			the operational status of the repeater. This trap is sent
			either when the value of rptrOperStatus changes, or upon
			completion of a non-disruptive test. The rptrHealth trap
			must contain the rptrOperStatus object. The agent may
			optionally include the rptrHealthText object in the varBind
			list. See the rptrOperStatus and rptrHealthText objects for
			descriptions of the information that is sent.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			Repeater health status change from enterprise %id% with
			args: rptrOperStatus=%parm[#1]%
		</logmsg>
		<severity>Warning</severity>
	</event>
	<event>
		<mask>
			<maskelement>
				<mename>id</mename>
				<mevalue>.1.3.6.1.2.1.22.0.2</mevalue>
			</maskelement>
		</mask>
		<uei>uei.opennms.org/traps/rptrGroupChange</uei>
		<event-label>OpenNMS-defined trap event: rptrGroupChange</event-label>
		<descr>
			&lt;p&gt;This trap is sent when a change occurs in the group
			structure of a repeater. This occurs only when a group is
			logically or physically removed from or added to a repeater.
			The varBind list contains the identifier of the group that
			was removed or added.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			rptrGroupChange trap received from enterprise %id% with
			%parm[##]% args: rptrGroupIndex=%parm[#1]%
		</logmsg>
		<severity>Normal</severity>
	</event>
	<event>
		<mask>
			<maskelement>
				<mename>id</mename>
				<mevalue>.1.3.6.1.2.1.22.0.3</mevalue>
			</maskelement>
		</mask>
		<uei>uei.opennms.org/traps/rptrResetEvent</uei>
		<event-label>OpenNMS-defined trap event: rptrResetEvent</event-label>
		<descr>
			&lt;p&gt;The rptrResetEvent trap conveys information related
			to the operational status of the repeater. This trap is sent
			on completion of a repeater reset action. A repeater reset
			action is defined as an a transition to the START state of
			Fig 9-2 in section 9 [IEEE 802.3 Std], when triggered by a
			management command (e.g., an SNMP Set on the rptrReset
			object). The rptrResetEvent trap is not sent when the agent
			restarts and sends an SNMP coldStart or warmStart trap.
			However, it is recommended that a repeater agent send the
			rptrOperStatus object as an optional object with its
			coldStart and warmStart trap PDUs.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			rptrResetEvent trap received from enterprise %id% with
			%parm[##]% args:rptrOperStatus=%parm[#1]%
		</logmsg>
		<severity>Warning</severity>
	</event>
	<event>
		<mask>
			<maskelement>
				<mename>id</mename>
				<mevalue>.1.3.6.1.2.1.34.1.1.5.0.2</mevalue>
			</maskelement>
		</mask>
		<uei>uei.opennms.org/traps/snaLuSessnBindFail</uei>
		<event-label>OpenNMS-defined trap event: snaLuSessnBindFail</event-label>
		<descr>
			&lt;p&gt;This trap indicates the failure of a BIND. The
			value of snaLuSessnLocalApplName indicates the local
			application name. The value of snaLuSessnPartnerName
			indicates the partner name. The value of snaLuSessnOperState
			indicates the current state after change. The value of
			snaLuSessnBindFailureReason indicates the failure reason.
			The Agent should not generate more than 1 trap of this type
			per minute to minimize the level of management traffic on
			the network.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			snaLuSessnBindFailure trap received from enterprise %id%
			with %parm[##]% arguments: %parm[all]%
		</logmsg>
		<severity>Normal</severity>
	</event>
	<event>
		<mask>
			<maskelement>
				<mename>id</mename>
				<mevalue>.1.3.6.1.2.1.34.1.1.5.0.1</mevalue>
			</maskelement>
		</mask>
		<uei>uei.opennms.org/traps/snaLuStateChangeTrap</uei>
		<event-label>OpenNMS-defined trap event: snaLuStateChangeTrap</event-label>
		<descr>
			&lt;p&gt;This trap indicates that the operational state
			(i.e., snaLuOperState value) of the LU has changed. The
			value of snaLuOperName indicates the name of the LU. The
			value of snaLuOperSnaName indicates the SNA name of LU. The
			value of snaLuOperState indicates the current state after
			change.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			snaLuStateChangeTrap received from enterprise %id% with
			%parm[##]% arguments: %parm[all]%
		</logmsg>
		<severity>Normal</severity>
	</event>
	<event>
		<mask>
			<maskelement>
				<mename>id</mename>
				<mevalue>.1.3.6.1.2.1.34.1.1.10.0.2</mevalue>
			</maskelement>
		</mask>
		<uei>uei.opennms.org/traps/snaNodeActFailTrap</uei>
		<event-label>OpenNMS-defined trap event: snaNodeActFailTrap</event-label>
		<descr>
			&lt;p&gt;This trap indicates a Node activation failure. The
			value of snaNodeOperState indicates the current state after
			the activation attempt. The value of
			snaNodeOperActFailureReason indicates the failure
			reason.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			snaNodeActFailTrap received from enterprise %id% with
			%parm[##]% arguments: %parm[all]%
		</logmsg>
		<severity>Normal</severity>
	</event>
	<event>
		<mask>
			<maskelement>
				<mename>id</mename>
				<mevalue>.1.3.6.1.2.1.34.1.1.10.0.1</mevalue>
			</maskelement>
		</mask>
		<uei>uei.opennms.org/traps/snaNodeStateChange</uei>
		<event-label>OpenNMS-defined trap event: snaNodeStateChange</event-label>
		<descr>
			&lt;p&gt;This trap indicates that the operational state
			(i.e., value of the snaNodeOperState object) of a Node has
			changed. The following variables are returned:
			snaNodeOperName -&gt; current name of the Node, with the
			instance identifying the Node; and, snaNodeOperState -&gt;
			current state after the change.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			snaNodeStateChange trap received from enterprise %id% with
			%parm[##]% arguments: %parm[all]%
		</logmsg>
		<severity>Normal</severity>
	</event>
	<event>
		<mask>
			<maskelement>
				<mename>id</mename>
				<mevalue>.1.3.6.1.2.1.41.1.3.0.1</mevalue>
			</maskelement>
		</mask>
		<uei>uei.opennms.org/traps/sdlcPortStatusChange</uei>
		<event-label>OpenNMS-defined trap event: sdlcPortStatusChange</event-label>
		<descr>
			&lt;p&gt;This trap indicates that the state of an SDLC port
			has transitioned to active or inactive.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			sdlcPortStatusChange trap received from enterprise %id% with
			%parm[##]% args:ifIndex=%parm[#1]%;
			ifAdminStatus=%parm[#2]%; ifOperStatus=%parm[#3]%;
			sdlcPortOperLastFailTime=%parm[#4]%;
			sdlcPortOperLastFailCause=%parm[#5]%
		</logmsg>
		<severity>Warning</severity>
	</event>
	<event>
		<mask>
			<maskelement>
				<mename>id</mename>
				<mevalue>.1.3.6.1.2.1.41.1.3.0.2</mevalue>
			</maskelement>
		</mask>
		<uei>uei.opennms.org/traps/sdlcLSStatusChange</uei>
		<event-label>OpenNMS-defined trap event: sdlcLSStatusChange</event-label>
		<descr>
			&lt;p&gt;This trap indicates that the state of an SDLC link
			station has transitioned to contacted or
			discontacted.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			sdlcLSStatusChange trap received from enterprise %id% with
			%parm[##]% args:ifIndex=%parm[#1]%;
			sdlcLSAddress=%parm[#2]%; sdlcLSOperState=%parm[#3]%;
			sdlcLSAdminState=%parm[#4]%;
			sdlcLSOperLastFailTime=%parm[#5]%;
			sdlcLSOperLastFailCause=%parm[#6]%;
			sdlcLSOperLastFailFRMRInfo=%parm[#7]%;
			sdlcLSOperLastFailCtrlIn=%parm[#8]%;
			sdlcLSOperLastFailCtrlOut=%parm[#9]%;
			sdlcLSOperLastFailREPLYTOs=%parm[#10]%
		</logmsg>
		<severity>Warning</severity>
	</event>
	<event>
		<mask>
			<maskelement>
				<mename>id</mename>
				<mevalue>.1.3.6.1.2.1.46.1.0.1</mevalue>
			</maskelement>
		</mask>
		<uei>uei.opennms.org/traps/dlswTrapCntlTConnPartnerReject</uei>
		<event-label>OpenNMS-defined trap event: dlswTrapCntlTConnPartnerReject</event-label>
		<descr>
			&lt;p&gt;The dlswTrapCntlTConnPartnerReject trap is sent
			each time a transport connection is rejected by a partner
			DLSw during Capabilities Exchanges. The emission of this
			trap is controlled by
			dlswTrapCntlTConnPartnerReject.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			dlswTrapCntlTConnPartnerReject trap received from enterprise
			%id% with %parm[##]% args:
			dlswTConnOperTDomain=%parm[#1]%;dlswTConnOperRemoteTAddr=%parm[#
			2]%
		</logmsg>
		<severity>Warning</severity>
	</event>
	<event>
		<mask>
			<maskelement>
				<mename>id</mename>
				<mevalue>.1.3.6.1.2.1.46.1.0.2</mevalue>
			</maskelement>
		</mask>
		<uei>uei.opennms.org/traps/dlswTrapTConnProtViolation</uei>
		<event-label>OpenNMS-defined trap event: dlswTrapTConnProtViolation</event-label>
		<descr>
			&lt;p&gt;The dlswTrapTConnProtViolation trap is sent each
			time a protocol violation is detected for a transport
			connection. The emission of this trap is controlled by
			dlswTrapCntlTConnProtViolation.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			dlswTrapTConnProtViolation trap received from enterprise
			%id% with %parm[##]% args:
			dlswTConnOperTDomain=%parm[#1]%;dlswTConnOperRemoteTAddr=%parm[#
			2]%
		</logmsg>
		<severity>Warning</severity>
	</event>
	<event>
		<mask>
			<maskelement>
				<mename>id</mename>
				<mevalue>.1.3.6.1.2.1.46.1.0.3</mevalue>
			</maskelement>
		</mask>
		<uei>uei.opennms.org/traps/dlswTrapTConnUp</uei>
		<event-label>OpenNMS-defined trap event: dlswTrapTConnUp</event-label>
		<descr>
			&lt;p&gt;The dlswTrapTConnUp trap is sent each time a
			transport connection enters `connected' state. The emission
			of this trap is controlled by dlswTrapCntlTConn.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			dlswTrapTConnUp trap received from enterprise %id% with
			%parm[##]% args:
			dlswTConnOperTDomain=%parm[#1]%;dlswTConnOperRemoteTAddr=%parm[#
			2]%
		</logmsg>
		<severity>Warning</severity>
	</event>
	<event>
		<mask>
			<maskelement>
				<mename>id</mename>
				<mevalue>.1.3.6.1.2.1.46.1.0.4</mevalue>
			</maskelement>
		</mask>
		<uei>uei.opennms.org/traps/dlswTrapTConnDown</uei>
		<event-label>OpenNMS-defined trap event: dlswTrapTConnDown</event-label>
		<descr>
			&lt;p&gt;The dlswTrapTConnDown trap is sent each time a
			transport connection enters `disconnected' state. The
			emission of this trap is controlled by
			dlswTrapCntlTConn.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			dlswTrapTConnDown trap received from enterprise %id% with
			%parm[##]% args: dlswTConnOperTDomain=%parm[#1]%;
			dlswTConnOperRemoteTAddr=%parm[#2]%
		</logmsg>
		<severity>Warning</severity>
	</event>
	<event>
		<mask>
			<maskelement>
				<mename>id</mename>
				<mevalue>.1.3.6.1.2.1.46.1.0.5</mevalue>
			</maskelement>
		</mask>
		<uei>uei.opennms.org/traps/dlswTrapCircuitUp</uei>
		<event-label>OpenNMS-defined trap event: dlswTrapCircuitUp</event-label>
		<descr>
			&lt;p&gt;The dlswTrapCircuitUp trap is sent each time a
			circuit enters `connected' state. The emission of this trap
			is controlled by dlswTrapCntlCircuit.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			dlswTrapCircuitUp trap received from enterprise %id% with
			%parm[##]% args:
			dlswCircuitS1Mac=%parm[#1]%;dlswCircuitS1Sap=%parm[#2]%;dlswCirc
			uitS2Mac=%parm[#3]%;dlswCircuitS2Sap=%parm[#4]%
		</logmsg>
		<severity>Warning</severity>
	</event>
	<event>
		<mask>
			<maskelement>
				<mename>id</mename>
				<mevalue>.1.3.6.1.2.1.46.1.0.6</mevalue>
			</maskelement>
		</mask>
		<uei>uei.opennms.org/traps/dlswTrapCircuitDown</uei>
		<event-label>OpenNMS-defined trap event: dlswTrapCircuitDown</event-label>
		<descr>
			&lt;p&gt;The dlswTrapCircuitDown trap is sent each time a
			circuit enters `disconnected' state. The emission of this
			trap is controlled by dlswTrapCntlCircuit.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			dlswTrapCircuitDown trap received from enterprise %id% with
			%parm[##]% args:
			dlswCircuitS1Mac=%parm[#1]%;dlswCircuitS1Sap=%parm[#2]%;dlswCirc
			uitS2Mac=%parm[#3]%;dlswCircuitS2Sap=%parm[#4]%
		</logmsg>
		<severity>Warning</severity>
	</event>
	<event>
		<mask>
			<maskelement>
				<mename>id</mename>
				<mevalue>.1.3.6.1.3.71.2.0.1</mevalue>
			</maskelement>
		</mask>
		<uei>uei.opennms.org/traps/newFlow</uei>
		<event-label>OpenNMS-defined trap event: newFlow</event-label>
		<descr>
			&lt;p&gt;The newFlow trap indicates that the originating
			system has installed a new flow in its classifier, or (when
			reservation authorization is in view) is prepared to install
			such a flow in the classifier and is requesting
			authorization. The objects included with the Notification
			may be used to read further information using the RSVP MIB.
			Authorization or non-authorization may be enacted by a write
			to the variable rsvpFlowStatus.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			newFlow trap received from enterprise %id% with %parm[##]%
			arguments: %parm[all]%
		</logmsg>
		<severity>Normal</severity>
	</event>
	<event>
		<mask>
			<maskelement>
				<mename>id</mename>
				<mevalue>.1.3.6.1.3.71.2.0.2</mevalue>
			</maskelement>
		</mask>
		<uei>uei.opennms.org/traps/lostFlow</uei>
		<event-label>OpenNMS-defined trap event: lostFlow</event-label>
		<descr>
			&lt;p&gt;The lostFlow trap indicates that the originating
			system has removed a flow in its classifier.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			lostFlow trap received from enterprise %id% with %parm[##]%
			arguments: %parm[all]%
		</logmsg>
		<severity>Normal</severity>
	</event>
	<event>
		<mask>
			<maskelement>
				<mename>id</mename>
				<mevalue>.1.3.6.1.4.1.1916</mevalue>
			</maskelement>
			<maskelement>
				<mename>generic</mename>
				<mevalue>6</mevalue>
			</maskelement>
			<maskelement>
				<mename>specific</mename>
				<mevalue>0</mevalue>
			</maskelement>
		</mask>
		<uei>uei.opennms.org/traps/extremenetworks/extremeOverheat</uei>
		<event-label>OpenNMS-defined trap event:extremeOverheat</event-label>
		<descr>
		Indicates that the on-board temperature sensor has reported 
		an overheat condition. System will shutdown until unit has 
		sufficiently cooled such that operation may begin again. A 
		cold start trap will be issued when the unit has come back 
		on line. 	</descr>
		<logmsg dest="logndisplay">
		The agent %snmphost% has reported an overheat condition. 
		</logmsg>
		<severity>critical</severity>
	</event>
	<event>
		<mask>
			<maskelement>
				<mename>id</mename>
				<mevalue>.1.3.6.1.4.1.1916</mevalue>
			</maskelement>
			<maskelement>
				<mename>generic</mename>
				<mevalue>7</mevalue>
			</maskelement>
			<maskelement>
				<mename>specific</mename>
				<mevalue>0</mevalue>
			</maskelement>
		</mask>
		<uei>uei.opennms.org/traps/extremenetworks/extremeFanfailed</uei>
		<event-label>OpenNMS-defined trap event:extremeFanfailed</event-label>
		<descr>
		Indicates one or more of the cooling fans inside the device has 
		failed. A fanOK trap will be sent once the fan has attained normal 
		operation. 	</descr>
		<logmsg dest="logndisplay">
		The agent %snmphost% has reported one or more cooling fans has   failed. 
		</logmsg>
		<severity>minor</severity>
	</event>
	<event>
		<mask>
			<maskelement>
				<mename>id</mename>
				<mevalue>.1.3.6.1.4.1.1916</mevalue>
			</maskelement>
			<maskelement>
				<mename>generic</mename>
				<mevalue>8</mevalue>
			</maskelement>
			<maskelement>
				<mename>specific</mename>
				<mevalue>0</mevalue>
			</maskelement>
		</mask>
		<uei>uei.opennms.org/traps/extremenetworks/extremeFanOK</uei>
		<event-label>OpenNMS-defined trap event:extremeFanOK</event-label>
		<descr>
		A fan has transitioned out of a failure state and is now operating 
		correctly. 	</descr>
		<logmsg dest="logndisplay">
		The agent %snmphost% has reported that a previously failed fan is
		now operating. 
		</logmsg>
		<severity>normal</severity>
	</event>
	<event>
		<mask>
			<maskelement>
				<mename>id</mename>
				<mevalue>.1.3.6.1.4.1.1916</mevalue>
			</maskelement>
			<maskelement>
				<mename>generic</mename>
				<mevalue>9</mevalue>
			</maskelement>
			<maskelement>
				<mename>specific</mename>
				<mevalue>0</mevalue>
			</maskelement>
		</mask>
		<uei>uei.opennms.org/traps/extremenetworks/extremeInvalidLoginAttempt</uei>
		<event-label>OpenNMS-defined trap event:extremeInvalidLoginAttempt</event-label>
		<descr>
		A user attempted to login to console or by telnet but was refused 
		access due to incorrect username or password. 	</descr>
		<logmsg dest="logndisplay">
		The agent %snmphost% has reported a user attempted to login and
		was refused access. 
		</logmsg>
		<severity>warning</severity>
	</event>
	<event>
		<mask>
			<maskelement>
				<mename>id</mename>
				<mevalue>.1.3.6.1.4.1.1916</mevalue>
			</maskelement>
			<maskelement>
				<mename>generic</mename>
				<mevalue>10</mevalue>
			</maskelement>
			<maskelement>
				<mename>specific</mename>
				<mevalue>0</mevalue>
			</maskelement>
		</mask>
		<uei>uei.opennms.org/traps/extremenetworks/extremePowerSupplyFail</uei>
		<event-label>OpenNMS-defined trap event:extremePowerSupplyFail</event-label>
		<descr>
		One or more sources of power to this agent has failed. Presumably a 
		redundant power-supply has taken over.	</descr>
		<logmsg dest="logndisplay">
		The agent %snmphost% has reported a failed power supply.
		</logmsg>
		<severity>minor</severity>
	</event>
	<event>
		<mask>
			<maskelement>
				<mename>id</mename>
				<mevalue>.1.3.6.1.4.1.1916</mevalue>
			</maskelement>
			<maskelement>
				<mename>generic</mename>
				<mevalue>11</mevalue>
			</maskelement>
			<maskelement>
				<mename>specific</mename>
				<mevalue>0</mevalue>
			</maskelement>
		</mask>
		<uei>uei.opennms.org/traps/extremenetworks/extremePowerSupplyGood</uei>
		<event-label>OpenNMS-defined trap event:extremePowerSupplyGood</event-label>
		<descr>
		One or more previously bad sources of power to this agent has come 
		back to life without causing an agent restart.	</descr>
		<logmsg dest="logndisplay">
		The agent %snmphost% has reported a previously failed power supply
		has been restored.
		</logmsg>
		<severity>normal</severity>
	</event>
	<event>
		<mask>
			<maskelement>
				<mename>id</mename>
				<mevalue>.1.3.6.1.4.1.1916</mevalue>
			</maskelement>
			<maskelement>
				<mename>generic</mename>
				<mevalue>12</mevalue>
			</maskelement>
			<maskelement>
				<mename>specific</mename>
				<mevalue>0</mevalue>
			</maskelement>
		</mask>
		<uei>uei.opennms.org/traps/extremenetworks/extremeRpsAlarm</uei>
		<event-label>OpenNMS-defined trap event:extremeRpsAlarm</event-label>
		<descr>
		Attached Redundant Power Supply device is indicating an alarm 
		condition.	</descr>
		<logmsg dest="logndisplay">
		The agent %snmphost% has reported an attached RPS device is 
		indicating an alarm condition.
		</logmsg>
		<severity>minor</severity>
	</event>
	<event>
		<mask>
			<maskelement>
				<mename>id</mename>
				<mevalue>.1.3.6.1.4.1.1916</mevalue>
			</maskelement>
			<maskelement>
				<mename>generic</mename>
				<mevalue>14</mevalue>
			</maskelement>
			<maskelement>
				<mename>specific</mename>
				<mevalue>0</mevalue>
			</maskelement>
		</mask>
		<uei>uei.opennms.org/traps/extremenetworks/extremeSmartTrap</uei>
		<event-label>OpenNMS-defined trap event:extremeSmartTrap</event-label>
		<descr>
		Signifies that the value of one of the object identifiers defined in 
		the extremeSmartTrapRulesTable has changed, and hence a new entry has 
		been created in the extremeSmartTrapInstanceTable. Such a trap is sent
		at most once every thirty seconds if one or more entry was created in 
		the last thirty seconds.	</descr>
		<logmsg dest="logndisplay">
		The agent %snmphost% indicates a new entry has been created in the 
		extremeSmartTrapInstanceTable.
		</logmsg>
		<severity>minor</severity>
	</event>
	<event>
		<mask>
			<maskelement>
				<mename>id</mename>
				<mevalue>.1.3.6.1.4.1.1916</mevalue>
			</maskelement>
			<maskelement>
				<mename>generic</mename>
				<mevalue>15</mevalue>
			</maskelement>
			<maskelement>
				<mename>specific</mename>
				<mevalue>0</mevalue>
			</maskelement>
		</mask>
		<uei>uei.opennms.org/traps/extremenetworks/extremeModuleStateChanged</uei>
		<event-label>OpenNMS-defined trap event:extremeModuleStateChanged</event-label>
		<descr>
		Signifies that the value of the extremeSlotModuleState and it is 
		now %parm[#5]%for the slot %parm[#2]% in a BlackDiamond has 
		changed.  	</descr>
		<logmsg dest="logndisplay">
		The agent %snmphost% indicates that the value of the 
		extremeSlotModuleState for the specified extremeSlotNumber in a 
		BlackDiamond has changed. 
		</logmsg>
		<severity>minor</severity>
		<!--
		Variables associated: sysUpTime, extremeSlotNumber, 
		extremeSlotModuleConfiguredType extremeSlotModuleInsertedType, 
		extremeSlotModuleState
		-->
	</event>
	<event>
		<mask>
			<maskelement>
				<mename>id</mename>
				<mevalue>.1.3.6.1.4.1.1916</mevalue>
			</maskelement>
			<maskelement>
				<mename>generic</mename>
				<mevalue>17</mevalue>
			</maskelement>
			<maskelement>
				<mename>specific</mename>
				<mevalue>0</mevalue>
			</maskelement>
		</mask>
		<uei>uei.opennms.org/traps/extremenetworks/extremeEsrpStateChange</uei>
		<event-label>OpenNMS-defined trap event:extremeEsrpStateChange</event-label>
		<descr>
		An ESRP state change has occured on ESRP group %parm[#5]% for 
		VLAN %parm[#4]%.  The ESRP net address associated with this change is
		%parm[#7]%. 	</descr>
		<logmsg dest="logndisplay">
		The agent %snmphost% reports an ESRP state change has occured on ESRP 
		group %parm[#5]% for VLAN %parm[#4]%.
		</logmsg>
		<severity>warning</severity>
		<!--
		Variables associated: sysUpTime, sysDescr, extremeVlanIfIndex, 
		extremeVlanIfDescr, extremeEsrpGroup, extremeEsrpState, 
		extremeEsrpNetAddress, ifPhysAddress, extremeEsrpActivePorts, 
		extremeEsrpTrackedActivePorts, extremeEsrpTrackedIpRoutes 
		-->
	</event>
	<event>
		<mask>
			<maskelement>
				<mename>id</mename>
				<mevalue>.1.3.6.1.4.1.1916</mevalue>
			</maskelement>
			<maskelement>
				<mename>generic</mename>
				<mevalue>18</mevalue>
			</maskelement>
			<maskelement>
				<mename>specific</mename>
				<mevalue>0</mevalue>
			</maskelement>
		</mask>
		<uei>uei.opennms.org/traps/extremenetworks/extremeSlbUnitAdded</uei>
		<event-label>OpenNMS-defined trap event:extremeSlbUnitAdded</event-label>
		<descr>
		The server load balancer has activated a group of virtual servers that 
		it normally would not activate. This may be due to the failure of 
		another server load balancer
		</descr>
		<logmsg dest="logndisplay">
		The agent %snmphost% reports an SLB unit has been 
		added</logmsg>
		<severity>warning</severity>
	</event>
	<event>
		<mask>
			<maskelement>
				<mename>id</mename>
				<mevalue>.1.3.6.1.4.1.1916</mevalue>
			</maskelement>
			<maskelement>
				<mename>generic</mename>
				<mevalue>19</mevalue>
			</maskelement>
			<maskelement>
				<mename>specific</mename>
				<mevalue>0</mevalue>
			</maskelement>
		</mask>
		<uei>uei.opennms.org/traps/extremenetworks/extremeSlbUnitRemoved</uei>
		<event-label>OpenNMS-defined trap event:extremeSlbUnitRemoved</event-label>
		<descr>
		The server load balancer has deactivated a group of virtual servers 
		that it normally has active. This indicates that something is wrong in
		the server load balancer; for example its ping check may be failing.
		</descr>
		<logmsg dest="logndisplay">
		The agent %snmphost% reports an SLB unit has been 
		deactivated.</logmsg>
		<severity>warning</severity>
	</event>
	<event>
		<mask>
			<maskelement>
				<mename>id</mename>
				<mevalue>.1.3.6.1.4.1.1916</mevalue>
			</maskelement>
			<maskelement>
				<mename>generic</mename>
				<mevalue>20</mevalue>
			</maskelement>
			<maskelement>
				<mename>specific</mename>
				<mevalue>0</mevalue>
			</maskelement>
		</mask>
		<uei>uei.opennms.org/traps/extremenetworks/extremeEdpNeighborAdded</uei>
		<event-label>OpenNMS-defined trap event:extremeEdpNeighborAdded</event-label>
		<descr>
		This node discovers a new neighbor through Extreme Discovery.
		</descr>
		<logmsg dest="logndisplay">
		The agent %snmphost% reports a new neighbor has been 
		discovered on port %parm[#2]% through Extreme Discovery.</logmsg>
		<severity>normal</severity>
		<!-- 
		Variables associated: sysUpTime, extremeEdpPortIfIndex, 
		extremeEdpNeighborId, extremeEdpEntryAge
		-->
	</event>
	<event>
		<mask>
			<maskelement>
				<mename>id</mename>
				<mevalue>.1.3.6.1.4.1.1916</mevalue>
			</maskelement>
			<maskelement>
				<mename>generic</mename>
				<mevalue>21</mevalue>
			</maskelement>
			<maskelement>
				<mename>specific</mename>
				<mevalue>0</mevalue>
			</maskelement>
		</mask>
		<uei>uei.opennms.org/traps/extremenetworks/extremeEdpNeighborRemoved</uei>
		<event-label>OpenNMS-defined trap event:extremeEdpNeighborRemoved</event-label>
		<descr>
		No EDP updates are received from this neighbor within the configured
		timeout period and this neighbor entry is aged out by the device.
		</descr>
		<logmsg dest="logndisplay">
		The agent %snmphost% reports an EDP neighbor has been 
		aged out on port %parm[#2]%.</logmsg>
		<severity>warning</severity>
		<!-- 
		Variables associated: sysUpTime, extremeEdpPortIfIndex,  extremeEdpNeighborId, extremeEdpEntryAge
		-->
	</event>
	<event>
		<mask>
			<maskelement>
				<mename>id</mename>
				<mevalue>.1.3.6.1.4.1.1916</mevalue>
			</maskelement>
			<maskelement>
				<mename>generic</mename>
				<mevalue>22</mevalue>
			</maskelement>
			<maskelement>
				<mename>specific</mename>
				<mevalue>0</mevalue>
			</maskelement>
		</mask>
		<uei>uei.opennms.org/traps/extremenetworks/extremeCpuHealthCheckFailed</uei>
		<event-label>OpenNMS-defined trap event:extremeCpuHealthCheckFailed</event-label>
		<descr>
		CPU Health check has failed. 
		</descr>
		<logmsg dest="logndisplay">
		The agent %snmphost% reports a CPU health check has failed 
		on slot %parm[#3]%</logmsg>
		<severity>major</severity>
		<!-- 
		Variables associated: sysUpTime, sysDescr, extremeSlotNumber
		-->
	</event>
	<event>
		<mask>
			<maskelement>
				<mename>id</mename>
				<mevalue>.1.3.6.1.4.1.2.6.66.1.2.1.2.0.1</mevalue>
			</maskelement>
		</mask>
		<uei>uei.opennms.org/traps/8272TsTempThreshold</uei>
		<event-label>OpenNMS-defined trap event: 8272TsTempThreshold</event-label>
		<descr>
			&lt;p&gt;This trap is generated when the system temperature
			either exceeds 50 C or when it returns to normal(45 C) after
			exceeding the temperature. The variable
			ibm8272Ts2SysTemperature indicates the temperature condition
			at the time of the event.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			ibm8272TsTempThreshold trap received from enterprise %id%
			with %parm[##]% args: sysName=%parm[#1]%;
			sysLocation=%parm[#2]%; ibm8272TsSysTemperature=%parm[#3]%
		</logmsg>
		<severity>Warning</severity>
	</event>
	<event>
		<mask>
			<maskelement>
				<mename>id</mename>
				<mevalue>.1.3.6.1.4.1.2.6.66.1.2.1.2.0.2</mevalue>
			</maskelement>
		</mask>
		<uei>uei.opennms.org/traps/8272TsPwrSupChange</uei>
		<event-label>OpenNMS-defined trap event: 8272TsPwrSupChange</event-label>
		<descr>
			&lt;p&gt;This trap is generated when the power supply status
			of the switch is inError or returns to normal. This trap is
			only generated if the switch has more than one power supply
			and at least one of the other power supplies is
			operational.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			ibm8272TsPwrSupChange trap received from enterprise %id%
			with %parm[##]% args:sysName=%parm[#1]%;
			sysLocation=%parm[#2]%; ibm8272TsSysPwrStatus=%parm[#3]%
		</logmsg>
		<severity>Warning</severity>
	</event>
	<event>
		<mask>
			<maskelement>
				<mename>id</mename>
				<mevalue>.1.3.6.1.4.1.2.6.66.1.2.1.2.0.3</mevalue>
			</maskelement>
		</mask>
		<uei>uei.opennms.org/traps/8272TsFanChange</uei>
		<event-label>OpenNMS-defined trap event: 8272TsFanChange</event-label>
		<descr>
			&lt;p&gt;This trap is generated when the fan status of the
			switch is inError or returns to normal.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			ibm8272TsFanChange trap received from enterprise %id% with
			%parm[##]% args:sysName=%parm[#1]%; sysLocation=%parm[#2]%;
			ibm8272TsSysFanStatus=%parm[#3]%
		</logmsg>
		<severity>Warning</severity>
	</event>
	<event>
		<mask>
			<maskelement>
				<mename>id</mename>
				<mevalue>.1.3.6.1.4.1.2.6.66.1.2.1.2.0.4</mevalue>
			</maskelement>
		</mask>
		<uei>uei.opennms.org/traps/8272TsVoltageChange</uei>
		<event-label>OpenNMS-defined trap event: 8272TsVoltageChange</event-label>
		<descr>
			&lt;p&gt;This trap is generated when the voltage status of
			the switch is low or returns to normal.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			ibm8272TsVoltageChange trap received from enterprise %id%
			with %parm[##]% args:sysName=%parm[#1]%;
			sysLocation=%parm[#2]%; ibm8272TsSysVoltageStatus=%parm[#3]%
		</logmsg>
		<severity>Warning</severity>
	</event>
	<event>
		<mask>
			<maskelement>
				<mename>id</mename>
				<mevalue>.1.3.6.1.4.1.2.6.66.1.2.2.0.1</mevalue>
			</maskelement>
		</mask>
		<uei>uei.opennms.org/traps/827TsPortCfgLossTrap</uei>
		<event-label>OpenNMS-defined trap event: 827TsPortCfgLossTrap</event-label>
		<descr>
			&lt;p&gt;This trap occurs when a port is disabled because it
			has exceeded its Configuration Loss Threshold within the
			configured Sampling Period.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			ibm8272TsPortCfgLossTrap received from enterprise %id% with
			%parm[##]%
			args:ibm8272TsPortIndex=%parm[#1]%;ibm8272TsPortCfgLoss=%parm[#2
			]%
		</logmsg>
		<severity>Warning</severity>
	</event>
	<event>
		<mask>
			<maskelement>
				<mename>id</mename>
				<mevalue>.1.3.6.1.4.1.2.6.66.1.2.2.0.2</mevalue>
			</maskelement>
		</mask>
		<uei>uei.opennms.org/traps/8272TsBeaconStart</uei>
		<event-label>OpenNMS-defined trap event: 8272TsBeaconStart</event-label>
		<descr>
			&lt;p&gt;This trap is generated when a port or a station
			local to a port begins to beacon. It is sent out only when a
			ring status change indicates that a station is
			beaconing.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			ibm8272TsBeaconStart trap received from enterprise %id% with
			%parm[##]% args: ibm8272TsPortIndex=%parm[#1]%
		</logmsg>
		<severity>Warning</severity>
	</event>
	<event>
		<mask>
			<maskelement>
				<mename>id</mename>
				<mevalue>.1.3.6.1.4.1.2.6.66.1.2.2.0.3</mevalue>
			</maskelement>
		</mask>
		<uei>uei.opennms.org/traps/8272TsBeaconEnd</uei>
		<event-label>OpenNMS-defined trap event: 8272TsBeaconEnd</event-label>
		<descr>
			&lt;p&gt;This trap is generated when the ring status change
			indicates that a ring is no longer beaconing. This trap only
			occurs only once when the status actually changes.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			ibm8272TsBeaconEnd trap received from enterprise %id% with
			%parm[##]% args: ibm8272TsPortIndex=%parm[#1]%
		</logmsg>
		<severity>Normal</severity>
	</event>
	<event>
		<mask>
			<maskelement>
				<mename>id</mename>
				<mevalue>.1.3.6.1.4.1.2.6.66.1.2.2.0.4</mevalue>
			</maskelement>
		</mask>
		<uei>uei.opennms.org/traps/8272TsMaxFrmSzExceed</uei>
		<event-label>OpenNMS-defined trap event: 8272TsMaxFrmSzExceed</event-label>
		<descr>
			&lt;p&gt;This trap is generated when there has been a change
			in the number of oversized frames received (&gt;4540 bytes)
			on the port. This trap is only sent once every ten minutes
			for any given port.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			ibm8272TsMaxFrameSizeExceeded trap received from enterprise
			%id% with %parm[##]% args: ibm8272TsPortIndex=%parm[#1]%
		</logmsg>
		<severity>Warning</severity>
	</event>
	<event>
		<mask>
			<maskelement>
				<mename>id</mename>
				<mevalue>.1.3.6.1.4.1.2.6.66.1.2.2.0.5</mevalue>
			</maskelement>
		</mask>
		<uei>uei.opennms.org/traps/8272TsPtSwtMdChgTrap</uei>
		<event-label>OpenNMS-defined trap event: 8272TsPtSwtMdChgTrap</event-label>
		<descr>
			&lt;p&gt;This trap is generated only when the port changes
			from cut-through mode to store-and-forward mode based on the
			error trend calculations.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			ibm8272TsPortSwitchModeChangeTrap received from enterprise
			%id% with %parm[##]% args: ibm8272TsPortIndex=%parm[#1]%;
			ibm8272TsPortSwitchMode=%parm[#2]%
		</logmsg>
		<severity>Normal</severity>
	</event>
	<event>
		<mask>
			<maskelement>
				<mename>id</mename>
				<mevalue>.1.3.6.1.4.1.2.6.66.1.2.3.0.1</mevalue>
			</maskelement>
		</mask>
		<uei>uei.opennms.org/traps/8272TsDmnNewRoot</uei>
		<event-label>OpenNMS-defined trap event: 8272TsDmnNewRoot</event-label>
		<descr>
			&lt;p&gt;This trap is a domain specific version of the
			newRoot trap as described in RFC1493. The newRoot trap
			indicates that the sending agent has become the new root of
			the Spanning Tree; the trap is sent by a bridge soon after
			its election as the new root, e.g., upon expiration of the
			Topology Change Timer immediately subsequent to its
			election. Implementation of this trap is optional.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			ibm8272TsDmnNewRoot trap received from enterprise %id% with
			%parm[##]% args: ibm8272TsDmnIndex=%parm[#1]%
		</logmsg>
		<severity>Normal</severity>
	</event>
	<event>
		<mask>
			<maskelement>
				<mename>id</mename>
				<mevalue>.1.3.6.1.4.1.2.6.66.1.2.3.0.2</mevalue>
			</maskelement>
		</mask>
		<uei>uei.opennms.org/traps/8272TsDmnTopoChg</uei>
		<event-label>OpenNMS-defined trap event: 8272TsDmnTopoChg</event-label>
		<descr>
			&lt;p&gt;This trap is a domain specific version of the
			topologyChange trap as described in RFC1493. A
			topologyChange trap is sent by a bridge when any of its
			configured ports transitions from the Learning state to the
			Forwarding state, or from the Forwarding state to the
			Blocking state. The trap is not sent if a newRoot trap is
			sent for the same transition. Implementation of this trap is
			optional.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			ibm8272TsDmnTopologyChange trap received from enterprise
			%id% with %parm[##]% args: ibm8272TsDmnIndex=%parm[#1]%
		</logmsg>
		<severity>Normal</severity>
	</event>
	<event>
		<mask>
			<maskelement>
				<mename>id</mename>
				<mevalue>.1.3.6.1.4.1.23.2.5.5.0.1</mevalue>
			</maskelement>
		</mask>
		<uei>uei.opennms.org/traps/ipxTrapCircuitDown</uei>
		<event-label>OpenNMS-defined trap event: ipxTrapCircuitDown</event-label>
		<descr>
			&lt;p&gt;This trap signifies that the specified circuit has
			gone down.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			ipxTrapCircuitDown trap received from enterprise %id% with
			%parm[##]% arguments: %parm[all]%
		</logmsg>
		<severity>Minor</severity>
	</event>
	<event>
		<mask>
			<maskelement>
				<mename>id</mename>
				<mevalue>.1.3.6.1.4.1.23.2.5.5.0.2</mevalue>
			</maskelement>
		</mask>
		<uei>uei.opennms.org/traps/ipxTrapCircuitUp</uei>
		<event-label>OpenNMS-defined trap event: ipxTrapCircuitUp</event-label>
		<descr>
			&lt;p&gt;This trap signifies that the specified circuit has
			come up.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			ipxTrapCircuitUp trap received from enterprise %id% with
			%parm[##]% arguments: %parm[all]%
		</logmsg>
		<severity>Minor</severity>
	</event>
	<event>
		<mask>
			<maskelement>
				<mename>id</mename>
				<mevalue>.1.3.6.1.4.1.141.1.1.3.0.1</mevalue>
			</maskelement>
		</mask>
		<uei>uei.opennms.org/traps/RMON_Hi_Thresh</uei>
		<event-label>OpenNMS-defined trap event: RMON_Hi_Thresh</event-label>
		<descr>
			&lt;p&gt;RMON has detected a rising (high) threshold
			crossover.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			RMON: Rising (high) threshold exceeded
		</logmsg>
		<severity>Warning</severity>
	</event>
	<event>
		<mask>
			<maskelement>
				<mename>id</mename>
				<mevalue>.1.3.6.1.4.1.141.1.1.3.0.2</mevalue>
			</maskelement>
		</mask>
		<uei>uei.opennms.org/traps/RMON_Low_Thresh</uei>
		<event-label>OpenNMS-defined trap event: RMON_Low_Thresh</event-label>
		<descr>
			&lt;p&gt;RMON has detected a falling (low) threshold
			crossover.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			RMON: Falling (low) threshold crossed
		</logmsg>
		<severity>Warning</severity>
	</event>
	<event>
		<mask>
			<maskelement>
				<mename>id</mename>
				<mevalue>.1.3.6.1.4.1.197.3.1.1.0.2</mevalue>
			</maskelement>
		</mask>
		<uei>uei.opennms.org/traps/kalEps3StackProStackMatrixChange</uei>
		<event-label>OpenNMS-defined trap event: kalEps3StackProStackMatrixChange</event-label>
		<descr>
			&lt;p&gt;This trap is generated when the stack switches over
			from primary to secondary ProStack Matrix or from secondary
			back to primary ProStack Matrix.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			kalEps3StackProStackMatrixChange trap received from
			enterprise %id% with %parm[##]% arguments: %parm[all]%
		</logmsg>
		<severity>Warning</severity>
	</event>
	<event>
		<mask>
			<maskelement>
				<mename>id</mename>
				<mevalue>.1.3.6.1.4.1.197.3.2.0.1</mevalue>
			</maskelement>
		</mask>
		<uei>uei.opennms.org/traps/kalEps3StackTempChange</uei>
		<event-label>OpenNMS-defined trap event: kalEps3StackTempChange</event-label>
		<descr>
			&lt;p&gt;This trap is generated when the temperature in a
			switch exceeds normal or returns to normal.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			kalEps3StackTempChange trap received from enterprise %id%
			with %parm[##]% arguments: %parm[all]%
		</logmsg>
		<severity>Warning</severity>
	</event>
	<event>
		<mask>
			<maskelement>
				<mename>id</mename>
				<mevalue>.1.3.6.1.4.1.197.3.4.0.1</mevalue>
			</maskelement>
		</mask>
		<uei>uei.opennms.org/traps/kalEps3PortStrNFwdEntry</uei>
		<event-label>OpenNMS-defined trap event: kalEps3PortStrNFwdEntry</event-label>
		<descr>
			&lt;p&gt;This trap is generated when a port automatically
			enters store and forward mode when the error rate exceeds
			the threshold.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			kalEps3PortStrNFwdEntry trap received from enterprise %id%
			with %parm[##]% arguments: %parm[all]%
		</logmsg>
		<severity>Warning</severity>
	</event>
	<event>
		<mask>
			<maskelement>
				<mename>id</mename>
				<mevalue>.1.3.6.1.4.1.197.3.5.0.1</mevalue>
			</maskelement>
		</mask>
		<uei>uei.opennms.org/traps/kalEps3DmnNewRoot</uei>
		<event-label>OpenNMS-defined trap event: kalEps3DmnNewRoot</event-label>
		<descr>
			&lt;p&gt;This trap is a domain specific version of the
			newRoot trap as described in RFC1493. The newRoot trap
			indicates that the sending agent has become the new root of
			the Spanning Tree; the trap is sent by a bridge soon after
			its election as the new root, e.g., upon expiration of the
			Topology Change Timer immediately subsequent to its
			election. Implementation of this trap is optional.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			kalEps3DmnNewRoot trap received from enterprise %id% with
			%parm[##]% arguments: %parm[all]%
		</logmsg>
		<severity>Normal</severity>
	</event>
	<event>
		<mask>
			<maskelement>
				<mename>id</mename>
				<mevalue>.1.3.6.1.4.1.197.3.5.0.2</mevalue>
			</maskelement>
		</mask>
		<uei>uei.opennms.org/traps/kalEps3DmnTopologyChange</uei>
		<event-label>OpenNMS-defined trap event: kalEps3DmnTopologyChange</event-label>
		<descr>
			&lt;p&gt;This trap is a domain specific version of the
			topologyChange trap as described in RFC1493. A
			topologyChange trap is sent by a bridge when any of its
			configured ports transitions from the Learning state to the
			Forwarding state, or from the Forwarding state to the
			Blocking state. The trap is not sent if a newRoot trap is
			sent for the same transition. Implementation of this trap is
			optional.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			kalEps3DmnTopologyChange trap received from enterprise %id%
			with %parm[##]% arguments: %parm[all]%
		</logmsg>
		<severity>Normal</severity>
	</event>
	<event>
		<mask>
			<maskelement>
				<mename>id</mename>
				<mevalue>.1.3.6.1.4.1.197.3.6.0.2</mevalue>
			</maskelement>
		</mask>
		<uei>uei.opennms.org/traps/kalEps3EtherChannelFailed</uei>
		<event-label>OpenNMS-defined trap event: kalEps3EtherChannelFailed</event-label>
		<descr>
			&lt;p&gt;This trap is sent when one of the links in an
			EtherChannel fail. The variable kalEps3ECPorts contains the
			ports which are operational in the EtherChannel.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			kalEps3EtherChannelFailed trap received from enterprise %id%
			with %parm[##]% arguments: %parm[all]%
		</logmsg>
		<severity>Normal</severity>
	</event>
	<event>
		<mask>
			<maskelement>
				<mename>id</mename>
				<mevalue>.1.3.6.1.4.1.353.0.1</mevalue>
			</maskelement>
		</mask>
		<uei>uei.opennms.org/traps/atmfVpcChange</uei>
		<event-label>OpenNMS-defined trap event: atmfVpcChange</event-label>
		<descr>
			&lt;p&gt;An atmfVpcChange trap indicates that a VPC is added
			or deleted at this UNI. The variables included in the trap
			identify the VPI value of the new or deleted configured VPC
			at this UNI.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			atmfVpcChange received from enterprise %id% with %parm[##]%
			arguments: %parm[all]%
		</logmsg>
		<severity>Normal</severity>
	</event>
	<event>
		<mask>
			<maskelement>
				<mename>id</mename>
				<mevalue>.1.3.6.1.4.1.353.0.2</mevalue>
			</maskelement>
		</mask>
		<uei>uei.opennms.org/traps/atmfVccChange</uei>
		<event-label>OpenNMS-defined trap event: atmfVccChange</event-label>
		<descr>
			&lt;p&gt;An atmfVccChange trap indicates that a VCC is added
			or deleted at this UNI. The variables included in the trap
			identify the VCI and VPI values of the new or deleted
			configured VCC at this UNI.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			atmfVccChange received from enterprise %id% with %parm[##]%
			arguments: %parm[all]%
		</logmsg>
		<severity>Normal</severity>
	</event>
	<event>
		<mask>
			<maskelement>
				<mename>id</mename>
				<mevalue>.1.3.6.1.4.1.437.1.1.1.1.0.0</mevalue>
			</maskelement>
		</mask>
		<uei>uei.opennms.org/traps/Logon_Intruder_2</uei>
		<event-label>OpenNMS-defined trap event: Logon_Intruder_2</event-label>
		<descr></descr>
		<logmsg dest='logndisplay'>
			&lt;p&gt;Possible logon intrusion.&lt;/p&gt;
		</logmsg>
		<severity>Major</severity>
	</event>
	<event>
		<mask>
			<maskelement>
				<mename>id</mename>
				<mevalue>.1.3.6.1.4.1.437.1.1.1.1.0.1</mevalue>
			</maskelement>
		</mask>
		<uei>uei.opennms.org/traps/Diagnostic_Failure_2</uei>
		<event-label>OpenNMS-defined trap event: Diagnostic_Failure_2</event-label>
		<descr>
			&lt;p&gt;Diagnostic failure.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			Diagnostic failure
		</logmsg>
		<severity>Critical</severity>
	</event>
	<event>
		<mask>
			<maskelement>
				<mename>id</mename>
				<mevalue>.1.3.6.1.4.1.437.1.1.3.0.0</mevalue>
			</maskelement>
		</mask>
		<uei>uei.opennms.org/traps/Logon_Intruder_1</uei>
		<event-label>OpenNMS-defined trap event: Logon_Intruder_1</event-label>
		<descr>
			&lt;p&gt;A user is repeatedly trying to logon using an
			invalid password. The number of attempts exceeds the preset
			limit given in netMgmtConsolePasswordThresh. Depending on
			how the object netMgmtConsoleSilentTime is configured, the
			switch may shut down the Management Console following the
			generation of this trap.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			Possible logon intrusion. Trap received from enterprise %id%
			with %parm[##]% arguments: %parm[all]%
		</logmsg>
		<severity>Major</severity>
	</event>
	<event>
		<mask>
			<maskelement>
				<mename>id</mename>
				<mevalue>.1.3.6.1.4.1.437.1.1.3.0.1</mevalue>
			</maskelement>
		</mask>
		<uei>uei.opennms.org/traps/Diagnostic_Failure_1</uei>
		<event-label>OpenNMS-defined trap event: Diagnostic_Failure_1</event-label>
		<descr>
			&lt;p&gt;The switch issues this trap when its Power On Self
			Test (POST) code does not pass all tests. Some failures are
			catastrophic and may prevent the generation of this trap, as
			well as the system's operations.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			Diagnostic failure. Trap received from enterprise %id% with
			%parm[##]% arguments: %parm[all]%
		</logmsg>
		<severity>Critical</severity>
	</event>
	<event>
		<mask>
			<maskelement>
				<mename>id</mename>
				<mevalue>.1.3.6.1.4.1.437.1.1.3.0.3</mevalue>
			</maskelement>
		</mask>
		<uei>uei.opennms.org/traps/Address_Violation</uei>
		<event-label>OpenNMS-defined trap event: Address_Violation</event-label>
		<descr>
			&lt;p&gt;The addressViolation trap is issued when an address
			violation is detected on a secured port. The generation of
			the addressViolation trap can be enabled or suppressed using
			the object sysConfigAddressViolationAlert.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			addressViolation trap received from enterprise %id% with
			%parm[##]% arguments: %parm[all]%
		</logmsg>
		<severity>Major</severity>
	</event>
	<event>
		<mask>
			<maskelement>
				<mename>id</mename>
				<mevalue>.1.3.6.1.4.1.437.1.1.3.0.4</mevalue>
			</maskelement>
		</mask>
		<uei>uei.opennms.org/traps/Broadcast_Storm</uei>
		<event-label>OpenNMS-defined trap event: Broadcast_Storm</event-label>
		<descr>
			&lt;p&gt;The broadcastStorm trap is issued when broadcast
			storm control is enabled and the number of broadcast packets
			received in a second from a port is higher than the
			broadcast threshold. The generation of this trap can be
			enabled or suppressed using the object
			sysConfigBroadcastStormAlert.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			Broadcast threshold exceeded. Trap received from enterprise
			%id% with %parm[##]% arguments: %parm[all]%
		</logmsg>
		<severity>Major</severity>
	</event>
	<event>
		<mask>
			<maskelement>
				<mename>id</mename>
				<mevalue>.1.3.6.1.4.1.437.1.1.3.0.5</mevalue>
			</maskelement>
		</mask>
		<uei>uei.opennms.org/traps/RPS_Failure</uei>
		<event-label>OpenNMS-defined trap event: RPS_Failure</event-label>
		<descr>
			&lt;p&gt;A redundant power source is connected to the switch
			but a failure exists in the power system.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			Redundant power supply failed. Trap received from enterprise
			%id% with %parm[##]% arguments: %parm[all]%
		</logmsg>
		<severity>Minor</severity>
	</event>
	<event>
		<mask>
			<maskelement>
				<mename>id</mename>
				<mevalue>.1.3.6.1.4.1.494.4.0.1</mevalue>
			</maskelement>
		</mask>
		<uei>uei.opennms.org/traps/fanPSSpeedFailed</uei>
		<event-label>OpenNMS-defined trap event: fanPSSpeedFailed</event-label>
		<descr>
			&lt;p&gt;This trap is sent when the Power Supply fan has
			failed.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			fanPSSpeedFailed trap received from enterprise %id% with
			%parm[##]% arguments: %parm[all]%
		</logmsg>
		<severity>Major</severity>
	</event>
	<event>
		<mask>
			<maskelement>
				<mename>id</mename>
				<mevalue>.1.3.6.1.4.1.494.4.0.2</mevalue>
			</maskelement>
		</mask>
		<uei>uei.opennms.org/traps/fanExtSpeedFailed</uei>
		<event-label>OpenNMS-defined trap event: fanExtSpeedFailed</event-label>
		<descr>
			&lt;p&gt;This trap is sent when the external fan has
			failed.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			fanExtSpeedFailed trap received from enterprise %id% with
			%parm[##]% arguments: %parm[all]%
		</logmsg>
		<severity>Major</severity>
	</event>
	<event>
		<mask>
			<maskelement>
				<mename>id</mename>
				<mevalue>.1.3.6.1.4.1.494.4.0.3</mevalue>
			</maskelement>
		</mask>
		<uei>uei.opennms.org/traps/portFailed</uei>
		<event-label>OpenNMS-defined trap event: portFailed</event-label>
		<descr>
			&lt;p&gt;This trap is sent when a port has auto-closed or
			failed to open.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			portFailed trap received from enterprise %id% with
			%parm[##]% arguments: %parm[all]%
		</logmsg>
		<severity>Minor</severity>
	</event>
	<event>
		<mask>
			<maskelement>
				<mename>id</mename>
				<mevalue>.1.3.6.1.4.1.494.4.0.4</mevalue>
			</maskelement>
		</mask>
		<uei>uei.opennms.org/traps/brTestFailed</uei>
		<event-label>OpenNMS-defined trap event: brTestFailed</event-label>
		<descr>
			&lt;p&gt;This trap is sent when the bridge test on a port
			fails.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			brTestFailed trap received from enterprise %id% with
			%parm[##]% arguments: %parm[all]%
		</logmsg>
		<severity>Minor</severity>
	</event>
	<event>
		<mask>
                        <maskelement>
                                <mename>generic</mename>
                                <mevalue>0</mevalue>
                        </maskelement>
		</mask>
		<uei>uei.opennms.org/generic/traps/SNMP_Cold_Start</uei>
		<event-label>OpenNMS-defined trap event: SNMP_Cold_Start</event-label>
		<descr>
			&lt;p&gt;A coldStart trap signifies that the sending
			protocol entity is reinitializing itself such that the
			agent's configuration or the protocol entity implementation
			may be altered.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			Agent Up with Possible Changes (coldStart Trap)
			enterprise:%id% (%id%) args(%parm[##]%):%parm[all]%
		</logmsg>
		<severity>Normal</severity>
	</event>
	<event>
		<mask>
                        <maskelement>
                                <mename>generic</mename>
                                <mevalue>1</mevalue>
                        </maskelement>
		</mask>
		<uei>uei.opennms.org/generic/traps/SNMP_Warm_Start</uei>
		<event-label>OpenNMS-defined trap event: SNMP_Warm_Start</event-label>
		<descr>
			&lt;p&gt;A warmStart trap signifies that the sending
			protocol entity is reinitializing itself such that neither
			the agent configuration nor the protocol entity
			implementation is altered.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			Agent Up with No Changes (warmStart Trap) enterprise:%id%
			(%id%) args(%parm[##]%):%parm[all]%
		</logmsg>
		<severity>Normal</severity>
	</event>
	<event>
		<mask>
                        <maskelement>
                                <mename>generic</mename>
                                <mevalue>2</mevalue>
                        </maskelement>
		</mask>
		<uei>uei.opennms.org/generic/traps/SNMP_Link_Down</uei>
		<event-label>OpenNMS-defined trap event: SNMP_Link_Down</event-label>
		<descr>
			&lt;p&gt;A linkDown trap signifies that the sending protocol
			entity recognizes a failure in one of the communication
			link represented in the agent's configuration. The data
			passed with the event are 1) The name and value of the
			ifIndex instance for the affected interface. The name of the
			interface can be retrieved via an snmpget of
			.1.3.6.1.2.1.2.2.1.2.INST, where INST is the instance
			returned with the trap.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			Agent Interface Down (linkDown Trap) enterprise:%id% (%id%)
			on interface %parm[#1]%
		</logmsg>
		<severity>Minor</severity>
	</event>
	<event>
		<mask>
                        <maskelement>
                                <mename>generic</mename>
                                <mevalue>3</mevalue>
                        </maskelement>
		</mask>
		<uei>uei.opennms.org/generic/traps/SNMP_Link_Up</uei>
		<event-label>OpenNMS-defined trap event: SNMP_Link_Up</event-label>
		<descr>
			&lt;p&gt;A linkUp trap signifies that the sending protocol
			entity recognizes that one of the communication links
			represented in the agent's configuration has come up. The
			data passed with the event are 1) The name and value of the
			ifIndex instance for the affected interface. The name of the
			interface can be retrieved via an snmpget of
			.1.3.6.1.2.1.2.2.1.2.INST, where INST is the instance
			returned with the trap.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			Agent Interface Up (linkUp Trap) enterprise:%id% (%id%) on
			interface %parm[#1]%
		</logmsg>
		<severity>Normal</severity>
	</event>
	<event>
		<mask>
                        <maskelement>
                                <mename>generic</mename>
                                <mevalue>4</mevalue>
                        </maskelement>
		</mask>
		<uei>uei.opennms.org/generic/traps/SNMP_Authen_Failure</uei>
		<event-label>OpenNMS-defined trap event: SNMP_Authen_Failure</event-label>
		<descr>
			&lt;p&gt;An authentication failure trap signifies that the
			sending protocol entity is the addressee of a protocol
			message that is not properly authenticated.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			Incorrect Community Name (authenticationFailure Trap)
			enterprise:%id% (%id%) args(%parm[##]%):%parm[all]%
		</logmsg>
		<severity>Warning</severity>
	</event>
	<event>
		<mask>
			<maskelement>
				<mename>generic</mename>
				<mevalue>5</mevalue>
			</maskelement>
		</mask>
		<uei>uei.opennms.org/generic/traps/SNMP_EGP_Down</uei>
		<event-label>OpenNMS-defined trap event: SNMP_EGP_Down</event-label>
		<descr>
			&lt;p&gt;An egpNeighborLoss trap signifies that an EGP
			neighbor for whom the sending protocol entity was an EGP
			peer has been marked down and the peer relationship no
			longer obtains. The data passed with the event are The name
			and value of the ifIndex egpNeighAddr for the affected
			neighbor.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			EGP Neighbor Down (egpNeighborLoss Trap) enterprise:%id%
			(%id%) neighbor %parm[#1]%
		</logmsg>
		<severity>Warning</severity>
	</event>
	<event>
		<mask>
			<maskelement>
				<mename>generic</mename>
				<mevalue>6</mevalue>
			</maskelement>
		</mask>
		<uei>uei.opennms.org/generic/traps/EnterpriseDefault</uei>
		<event-label>OpenNMS-defined trap event: EnterpriseDefault</event-label>
		<descr>
			&lt;p&gt;This is the default event format used when an
			enterprise specific event (trap) is received for which no
			format has been configured (i.e. no event definition
			exists).&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			Received unformatted enterprise event (enterprise:%id% generic:%generic%
			specific:%specific%). %parm[##]%
			args: %parm[all]%
		</logmsg>
		<severity>Normal</severity>
	</event>
	<event>
		<uei>uei.opennms.org/default/trap</uei>
		<event-label>OpenNMS-defined default event: trap</event-label>
		<descr>
			&lt;p&gt;An SNMP Trap (%snmp%) with no matching
			configuration was received from interface
			%interface%.&lt;/p&gt; &lt;p&gt;The trap included the
			following variable bindings:&lt;/p&gt;
			&lt;p&gt;%parm[all]%&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			An SNMP Trap with no matching configuration was received
			from interface %interface%.
		</logmsg>
		<severity>Indeterminate</severity>
	</event>
	<event>
		<uei>uei.opennms.org/default/event</uei>
		<event-label>OpenNMS-defined default event: event</event-label>
		<descr>
			&lt;p&gt;An event with no matching configuration was
			received from interface %interface%. This event included the
			following parameters: %parm[all]%&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			An event with no matching configuration was received from
			interface %interface%.
		</logmsg>
		<severity>Indeterminate</severity>
	</event>
</events>
